/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!  # Clients  Discover the convenience of Circuit ID's readily available Client API libraries, enabling you to initiate seamless integration without delay. These pre-built libraries are designed for immediate use, empowering you to leverage the API's functionalities effortlessly. Get started with a Circuit ID&reg; Client library and streamline your development process today.  - <a href='https://github.com/circuitid/circuitid-node' target='_blank'>Node</a> - <a href='https://github.com/circuitid/circuitid-python' target='_blank'>Python</a> - <a href='https://github.com/circuitid/circuitid-java' target='_blank'>Java</a> - <a href='https://github.com/circuitid/circuitid-csharp' target='_blank'>C Sharp</a> - <a href='https://github.com/circuitid/circuitid-ruby' target='_blank'>Ruby</a> - <a href='https://github.com/circuitid/circuitid-go' target='_blank'>Go</a>
 *
 * The version of the OpenAPI document: 0.47.14
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using circuitid-csharp.CircuitID;
using circuitid-csharp.CircuitID;
using circuitid-csharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace circuitid-csharp.Test
{
    /// <summary>
    ///  Class for testing Contacts
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContactsTests
    {
        // TODO uncomment below to declare an instance variable for Contacts
        //private Contacts instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Contacts
            //instance = new Contacts();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Contacts
        /// </summary>
        [Test]
        public void ContactsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Contacts
            //Assert.IsInstanceOf(typeof(Contacts), instance);
        }


        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'First'
        /// </summary>
        [Test]
        public void FirstTest()
        {
            // TODO unit test for the property 'First'
        }
        /// <summary>
        /// Test the property 'Last'
        /// </summary>
        [Test]
        public void LastTest()
        {
            // TODO unit test for the property 'Last'
        }
        /// <summary>
        /// Test the property 'MobilePhone'
        /// </summary>
        [Test]
        public void MobilePhoneTest()
        {
            // TODO unit test for the property 'MobilePhone'
        }
        /// <summary>
        /// Test the property 'BusinessPhone'
        /// </summary>
        [Test]
        public void BusinessPhoneTest()
        {
            // TODO unit test for the property 'BusinessPhone'
        }
        /// <summary>
        /// Test the property 'FaxPhone'
        /// </summary>
        [Test]
        public void FaxPhoneTest()
        {
            // TODO unit test for the property 'FaxPhone'
        }
        /// <summary>
        /// Test the property 'Extension'
        /// </summary>
        [Test]
        public void ExtensionTest()
        {
            // TODO unit test for the property 'Extension'
        }
        /// <summary>
        /// Test the property 'JobTitle'
        /// </summary>
        [Test]
        public void JobTitleTest()
        {
            // TODO unit test for the property 'JobTitle'
        }
        /// <summary>
        /// Test the property 'Department'
        /// </summary>
        [Test]
        public void DepartmentTest()
        {
            // TODO unit test for the property 'Department'
        }
        /// <summary>
        /// Test the property 'Avatar'
        /// </summary>
        [Test]
        public void AvatarTest()
        {
            // TODO unit test for the property 'Avatar'
        }

    }

}
