/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.20
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.CircuitID.Api;
using Com.CircuitID.Models;
using Com.CircuitID.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.CircuitID.Test
{
    /// <summary>
    ///  Class for testing GetContact200Response
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetContact200ResponseTests
    {
        // TODO uncomment below to declare an instance variable for GetContact200Response
        //private GetContact200Response instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GetContact200Response
            //instance = new GetContact200Response();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GetContact200Response
        /// </summary>
        [Test]
        public void GetContact200ResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" GetContact200Response
            //Assert.IsInstanceOf(typeof(GetContact200Response), instance);
        }


        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'First'
        /// </summary>
        [Test]
        public void FirstTest()
        {
            // TODO unit test for the property 'First'
        }
        /// <summary>
        /// Test the property 'Last'
        /// </summary>
        [Test]
        public void LastTest()
        {
            // TODO unit test for the property 'Last'
        }
        /// <summary>
        /// Test the property 'MobilePhone'
        /// </summary>
        [Test]
        public void MobilePhoneTest()
        {
            // TODO unit test for the property 'MobilePhone'
        }
        /// <summary>
        /// Test the property 'BusinessPhone'
        /// </summary>
        [Test]
        public void BusinessPhoneTest()
        {
            // TODO unit test for the property 'BusinessPhone'
        }
        /// <summary>
        /// Test the property 'FaxPhone'
        /// </summary>
        [Test]
        public void FaxPhoneTest()
        {
            // TODO unit test for the property 'FaxPhone'
        }
        /// <summary>
        /// Test the property 'Extension'
        /// </summary>
        [Test]
        public void ExtensionTest()
        {
            // TODO unit test for the property 'Extension'
        }
        /// <summary>
        /// Test the property 'JobTitle'
        /// </summary>
        [Test]
        public void JobTitleTest()
        {
            // TODO unit test for the property 'JobTitle'
        }
        /// <summary>
        /// Test the property 'Department'
        /// </summary>
        [Test]
        public void DepartmentTest()
        {
            // TODO unit test for the property 'Department'
        }
        /// <summary>
        /// Test the property 'Avatar'
        /// </summary>
        [Test]
        public void AvatarTest()
        {
            // TODO unit test for the property 'Avatar'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'CreatedByUserId'
        /// </summary>
        [Test]
        public void CreatedByUserIdTest()
        {
            // TODO unit test for the property 'CreatedByUserId'
        }
        /// <summary>
        /// Test the property 'UpdatedByUserId'
        /// </summary>
        [Test]
        public void UpdatedByUserIdTest()
        {
            // TODO unit test for the property 'UpdatedByUserId'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Test]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

    }

}
