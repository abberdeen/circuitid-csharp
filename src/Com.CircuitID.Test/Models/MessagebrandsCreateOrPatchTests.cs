/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.20
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.CircuitID.Api;
using Com.CircuitID.Models;
using Com.CircuitID.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.CircuitID.Test
{
    /// <summary>
    ///  Class for testing MessagebrandsCreateOrPatch
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MessagebrandsCreateOrPatchTests
    {
        // TODO uncomment below to declare an instance variable for MessagebrandsCreateOrPatch
        //private MessagebrandsCreateOrPatch instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of MessagebrandsCreateOrPatch
            //instance = new MessagebrandsCreateOrPatch();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MessagebrandsCreateOrPatch
        /// </summary>
        [Test]
        public void MessagebrandsCreateOrPatchInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" MessagebrandsCreateOrPatch
            //Assert.IsInstanceOf(typeof(MessagebrandsCreateOrPatch), instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'BrandId'
        /// </summary>
        [Test]
        public void BrandIdTest()
        {
            // TODO unit test for the property 'BrandId'
        }
        /// <summary>
        /// Test the property 'Ein'
        /// </summary>
        [Test]
        public void EinTest()
        {
            // TODO unit test for the property 'Ein'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Test]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Test]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }
        /// <summary>
        /// Test the property 'BrandRelationship'
        /// </summary>
        [Test]
        public void BrandRelationshipTest()
        {
            // TODO unit test for the property 'BrandRelationship'
        }
        /// <summary>
        /// Test the property 'Vertical'
        /// </summary>
        [Test]
        public void VerticalTest()
        {
            // TODO unit test for the property 'Vertical'
        }
        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Test]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }
        /// <summary>
        /// Test the property 'CspId'
        /// </summary>
        [Test]
        public void CspIdTest()
        {
            // TODO unit test for the property 'CspId'
        }
        /// <summary>
        /// Test the property 'EinIssuingCountry'
        /// </summary>
        [Test]
        public void EinIssuingCountryTest()
        {
            // TODO unit test for the property 'EinIssuingCountry'
        }
        /// <summary>
        /// Test the property 'UniversalEin'
        /// </summary>
        [Test]
        public void UniversalEinTest()
        {
            // TODO unit test for the property 'UniversalEin'
        }

    }

}
