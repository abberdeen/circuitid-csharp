/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.19
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.CircuitID.Api;
using Com.CircuitID.Models;
using Com.CircuitID.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.CircuitID.Test
{
    /// <summary>
    ///  Class for testing GetDeveloperApp200Response
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetDeveloperApp200ResponseTests
    {
        // TODO uncomment below to declare an instance variable for GetDeveloperApp200Response
        //private GetDeveloperApp200Response instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GetDeveloperApp200Response
            //instance = new GetDeveloperApp200Response();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GetDeveloperApp200Response
        /// </summary>
        [Test]
        public void GetDeveloperApp200ResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" GetDeveloperApp200Response
            //Assert.IsInstanceOf(typeof(GetDeveloperApp200Response), instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Visibility'
        /// </summary>
        [Test]
        public void VisibilityTest()
        {
            // TODO unit test for the property 'Visibility'
        }
        /// <summary>
        /// Test the property 'RequireId'
        /// </summary>
        [Test]
        public void RequireIdTest()
        {
            // TODO unit test for the property 'RequireId'
        }
        /// <summary>
        /// Test the property 'IsFree'
        /// </summary>
        [Test]
        public void IsFreeTest()
        {
            // TODO unit test for the property 'IsFree'
        }
        /// <summary>
        /// Test the property 'FeeDescription'
        /// </summary>
        [Test]
        public void FeeDescriptionTest()
        {
            // TODO unit test for the property 'FeeDescription'
        }
        /// <summary>
        /// Test the property 'IntegrationType'
        /// </summary>
        [Test]
        public void IntegrationTypeTest()
        {
            // TODO unit test for the property 'IntegrationType'
        }
        /// <summary>
        /// Test the property 'Services'
        /// </summary>
        [Test]
        public void ServicesTest()
        {
            // TODO unit test for the property 'Services'
        }
        /// <summary>
        /// Test the property 'Events'
        /// </summary>
        [Test]
        public void EventsTest()
        {
            // TODO unit test for the property 'Events'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Test]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'WebhookUrl'
        /// </summary>
        [Test]
        public void WebhookUrlTest()
        {
            // TODO unit test for the property 'WebhookUrl'
        }
        /// <summary>
        /// Test the property 'TermsOfServiceUrl'
        /// </summary>
        [Test]
        public void TermsOfServiceUrlTest()
        {
            // TODO unit test for the property 'TermsOfServiceUrl'
        }
        /// <summary>
        /// Test the property 'PrivacyPolicyUrl'
        /// </summary>
        [Test]
        public void PrivacyPolicyUrlTest()
        {
            // TODO unit test for the property 'PrivacyPolicyUrl'
        }
        /// <summary>
        /// Test the property 'Permissions'
        /// </summary>
        [Test]
        public void PermissionsTest()
        {
            // TODO unit test for the property 'Permissions'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'WebhookAuthType'
        /// </summary>
        [Test]
        public void WebhookAuthTypeTest()
        {
            // TODO unit test for the property 'WebhookAuthType'
        }
        /// <summary>
        /// Test the property 'WebhookUsername'
        /// </summary>
        [Test]
        public void WebhookUsernameTest()
        {
            // TODO unit test for the property 'WebhookUsername'
        }
        /// <summary>
        /// Test the property 'WebhookPassword'
        /// </summary>
        [Test]
        public void WebhookPasswordTest()
        {
            // TODO unit test for the property 'WebhookPassword'
        }
        /// <summary>
        /// Test the property 'WebhookTokenName'
        /// </summary>
        [Test]
        public void WebhookTokenNameTest()
        {
            // TODO unit test for the property 'WebhookTokenName'
        }
        /// <summary>
        /// Test the property 'WebhookToken'
        /// </summary>
        [Test]
        public void WebhookTokenTest()
        {
            // TODO unit test for the property 'WebhookToken'
        }
        /// <summary>
        /// Test the property 'CreatedByUserId'
        /// </summary>
        [Test]
        public void CreatedByUserIdTest()
        {
            // TODO unit test for the property 'CreatedByUserId'
        }
        /// <summary>
        /// Test the property 'UpdatedByUserId'
        /// </summary>
        [Test]
        public void UpdatedByUserIdTest()
        {
            // TODO unit test for the property 'UpdatedByUserId'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Test]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

    }

}
