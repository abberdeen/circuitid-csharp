/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.20
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.CircuitID.Api;
using Com.CircuitID.Models;
using Com.CircuitID.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.CircuitID.Test
{
    /// <summary>
    ///  Class for testing CallqueuesCreateOrPatch
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CallqueuesCreateOrPatchTests
    {
        // TODO uncomment below to declare an instance variable for CallqueuesCreateOrPatch
        //private CallqueuesCreateOrPatch instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CallqueuesCreateOrPatch
            //instance = new CallqueuesCreateOrPatch();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CallqueuesCreateOrPatch
        /// </summary>
        [Test]
        public void CallqueuesCreateOrPatchInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" CallqueuesCreateOrPatch
            //Assert.IsInstanceOf(typeof(CallqueuesCreateOrPatch), instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Strategy'
        /// </summary>
        [Test]
        public void StrategyTest()
        {
            // TODO unit test for the property 'Strategy'
        }
        /// <summary>
        /// Test the property 'AnnouncePosition'
        /// </summary>
        [Test]
        public void AnnouncePositionTest()
        {
            // TODO unit test for the property 'AnnouncePosition'
        }
        /// <summary>
        /// Test the property 'Moh'
        /// </summary>
        [Test]
        public void MohTest()
        {
            // TODO unit test for the property 'Moh'
        }
        /// <summary>
        /// Test the property 'CallerResumeTimeout'
        /// </summary>
        [Test]
        public void CallerResumeTimeoutTest()
        {
            // TODO unit test for the property 'CallerResumeTimeout'
        }
        /// <summary>
        /// Test the property 'MaxWaitTime'
        /// </summary>
        [Test]
        public void MaxWaitTimeTest()
        {
            // TODO unit test for the property 'MaxWaitTime'
        }
        /// <summary>
        /// Test the property 'MaxWaitTimeNoAgent'
        /// </summary>
        [Test]
        public void MaxWaitTimeNoAgentTest()
        {
            // TODO unit test for the property 'MaxWaitTimeNoAgent'
        }
        /// <summary>
        /// Test the property 'MaxNoAnswer'
        /// </summary>
        [Test]
        public void MaxNoAnswerTest()
        {
            // TODO unit test for the property 'MaxNoAnswer'
        }
        /// <summary>
        /// Test the property 'NoAnswerDelayTimeout'
        /// </summary>
        [Test]
        public void NoAnswerDelayTimeoutTest()
        {
            // TODO unit test for the property 'NoAnswerDelayTimeout'
        }
        /// <summary>
        /// Test the property 'RejectTimeout'
        /// </summary>
        [Test]
        public void RejectTimeoutTest()
        {
            // TODO unit test for the property 'RejectTimeout'
        }
        /// <summary>
        /// Test the property 'BusyTimeout'
        /// </summary>
        [Test]
        public void BusyTimeoutTest()
        {
            // TODO unit test for the property 'BusyTimeout'
        }
        /// <summary>
        /// Test the property 'WrapUpTimeout'
        /// </summary>
        [Test]
        public void WrapUpTimeoutTest()
        {
            // TODO unit test for the property 'WrapUpTimeout'
        }
        /// <summary>
        /// Test the property 'TimeBasedScore'
        /// </summary>
        [Test]
        public void TimeBasedScoreTest()
        {
            // TODO unit test for the property 'TimeBasedScore'
        }
        /// <summary>
        /// Test the property 'TierRulesApply'
        /// </summary>
        [Test]
        public void TierRulesApplyTest()
        {
            // TODO unit test for the property 'TierRulesApply'
        }
        /// <summary>
        /// Test the property 'TierRuleNoAgentNoWait'
        /// </summary>
        [Test]
        public void TierRuleNoAgentNoWaitTest()
        {
            // TODO unit test for the property 'TierRuleNoAgentNoWait'
        }
        /// <summary>
        /// Test the property 'TierRuleWaitSecond'
        /// </summary>
        [Test]
        public void TierRuleWaitSecondTest()
        {
            // TODO unit test for the property 'TierRuleWaitSecond'
        }
        /// <summary>
        /// Test the property 'TierRuleWaitMultiplyLevel'
        /// </summary>
        [Test]
        public void TierRuleWaitMultiplyLevelTest()
        {
            // TODO unit test for the property 'TierRuleWaitMultiplyLevel'
        }
        /// <summary>
        /// Test the property 'AbandonedResumeAllowed'
        /// </summary>
        [Test]
        public void AbandonedResumeAllowedTest()
        {
            // TODO unit test for the property 'AbandonedResumeAllowed'
        }
        /// <summary>
        /// Test the property 'DiscardAbandonedAfter'
        /// </summary>
        [Test]
        public void DiscardAbandonedAfterTest()
        {
            // TODO unit test for the property 'DiscardAbandonedAfter'
        }
        /// <summary>
        /// Test the property 'MaxWaitTimeNoAgentTimeReached'
        /// </summary>
        [Test]
        public void MaxWaitTimeNoAgentTimeReachedTest()
        {
            // TODO unit test for the property 'MaxWaitTimeNoAgentTimeReached'
        }

    }

}
