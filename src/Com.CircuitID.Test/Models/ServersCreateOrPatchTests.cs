/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.21
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.CircuitID.Api;
using Com.CircuitID.Models;
using Com.CircuitID.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.CircuitID.Test
{
    /// <summary>
    ///  Class for testing ServersCreateOrPatch
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ServersCreateOrPatchTests
    {
        // TODO uncomment below to declare an instance variable for ServersCreateOrPatch
        //private ServersCreateOrPatch instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ServersCreateOrPatch
            //instance = new ServersCreateOrPatch();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ServersCreateOrPatch
        /// </summary>
        [Test]
        public void ServersCreateOrPatchInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ServersCreateOrPatch
            //Assert.IsInstanceOf(typeof(ServersCreateOrPatch), instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Host'
        /// </summary>
        [Test]
        public void HostTest()
        {
            // TODO unit test for the property 'Host'
        }
        /// <summary>
        /// Test the property 'Port'
        /// </summary>
        [Test]
        public void PortTest()
        {
            // TODO unit test for the property 'Port'
        }
        /// <summary>
        /// Test the property 'CallerId'
        /// </summary>
        [Test]
        public void CallerIdTest()
        {
            // TODO unit test for the property 'CallerId'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'InboundSipTrunkingOrder'
        /// </summary>
        [Test]
        public void InboundSipTrunkingOrderTest()
        {
            // TODO unit test for the property 'InboundSipTrunkingOrder'
        }
        /// <summary>
        /// Test the property 'OutboundSipTrunkingOrder'
        /// </summary>
        [Test]
        public void OutboundSipTrunkingOrderTest()
        {
            // TODO unit test for the property 'OutboundSipTrunkingOrder'
        }
        /// <summary>
        /// Test the property 'NoInstantRingBack'
        /// </summary>
        [Test]
        public void NoInstantRingBackTest()
        {
            // TODO unit test for the property 'NoInstantRingBack'
        }
        /// <summary>
        /// Test the property 'BypassMedia'
        /// </summary>
        [Test]
        public void BypassMediaTest()
        {
            // TODO unit test for the property 'BypassMedia'
        }
        /// <summary>
        /// Test the property 'DisableRTPAutoAdjust'
        /// </summary>
        [Test]
        public void DisableRTPAutoAdjustTest()
        {
            // TODO unit test for the property 'DisableRTPAutoAdjust'
        }

    }

}
