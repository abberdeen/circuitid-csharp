/*
 * Circuit ID REST API
 *
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.19
 * Contact: support@circuitid.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Com.CircuitID.Client.OpenAPIDateConverter;

namespace Com.CircuitID.Models
{
    /// <summary>
    /// GetUser200Response
    /// </summary>
    [DataContract]
    public partial class GetUser200Response :  IEquatable<GetUser200Response>, IValidatableObject
    {
        /// <summary>
        /// Defines Language
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LanguageEnum
        {
            /// <summary>
            /// Enum Fr for value: fr
            /// </summary>
            [EnumMember(Value = "fr")]
            Fr = 1,

            /// <summary>
            /// Enum En for value: en
            /// </summary>
            [EnumMember(Value = "en")]
            En = 2,

            /// <summary>
            /// Enum Ja for value: ja
            /// </summary>
            [EnumMember(Value = "ja")]
            Ja = 3,

            /// <summary>
            /// Enum De for value: de
            /// </summary>
            [EnumMember(Value = "de")]
            De = 4,

            /// <summary>
            /// Enum Es for value: es
            /// </summary>
            [EnumMember(Value = "es")]
            Es = 5

        }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public LanguageEnum? Language { get; set; }
        /// <summary>
        /// Defines IsPrimary
        /// </summary>
        public enum IsPrimaryEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0

        }

        /// <summary>
        /// Gets or Sets IsPrimary
        /// </summary>
        [DataMember(Name="isPrimary", EmitDefaultValue=false)]
        public IsPrimaryEnum? IsPrimary { get; set; }
        /// <summary>
        /// Defines Status
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Active for value: active
            /// </summary>
            [EnumMember(Value = "active")]
            Active = 1,

            /// <summary>
            /// Enum Disabled for value: disabled
            /// </summary>
            [EnumMember(Value = "disabled")]
            Disabled = 2,

            /// <summary>
            /// Enum Terminated for value: terminated
            /// </summary>
            [EnumMember(Value = "terminated")]
            Terminated = 3

        }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Defines VmGreetingType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VmGreetingTypeEnum
        {
            /// <summary>
            /// Enum Default for value: default
            /// </summary>
            [EnumMember(Value = "default")]
            Default = 1,

            /// <summary>
            /// Enum Mp3 for value: mp3
            /// </summary>
            [EnumMember(Value = "mp3")]
            Mp3 = 2,

            /// <summary>
            /// Enum Number for value: number
            /// </summary>
            [EnumMember(Value = "number")]
            Number = 3

        }

        /// <summary>
        /// Gets or Sets VmGreetingType
        /// </summary>
        [DataMember(Name="vmGreetingType", EmitDefaultValue=false)]
        public VmGreetingTypeEnum? VmGreetingType { get; set; }
        /// <summary>
        /// Defines AdminPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AdminPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets AdminPermission
        /// </summary>
        [DataMember(Name="adminPermission", EmitDefaultValue=true)]
        public AdminPermissionEnum? AdminPermission { get; set; }
        /// <summary>
        /// Defines BillingPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BillingPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets BillingPermission
        /// </summary>
        [DataMember(Name="billingPermission", EmitDefaultValue=true)]
        public BillingPermissionEnum? BillingPermission { get; set; }
        /// <summary>
        /// Defines PhonePermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PhonePermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets PhonePermission
        /// </summary>
        [DataMember(Name="phonePermission", EmitDefaultValue=true)]
        public PhonePermissionEnum? PhonePermission { get; set; }
        /// <summary>
        /// Defines AgilePermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AgilePermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets AgilePermission
        /// </summary>
        [DataMember(Name="agilePermission", EmitDefaultValue=true)]
        public AgilePermissionEnum? AgilePermission { get; set; }
        /// <summary>
        /// Defines JobServerPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum JobServerPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets JobServerPermission
        /// </summary>
        [DataMember(Name="jobServerPermission", EmitDefaultValue=true)]
        public JobServerPermissionEnum? JobServerPermission { get; set; }
        /// <summary>
        /// Defines MediaServerPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MediaServerPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets MediaServerPermission
        /// </summary>
        [DataMember(Name="mediaServerPermission", EmitDefaultValue=true)]
        public MediaServerPermissionEnum? MediaServerPermission { get; set; }
        /// <summary>
        /// Defines MailServerPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MailServerPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets MailServerPermission
        /// </summary>
        [DataMember(Name="mailServerPermission", EmitDefaultValue=true)]
        public MailServerPermissionEnum? MailServerPermission { get; set; }
        /// <summary>
        /// Defines SuperAdminPermission
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SuperAdminPermissionEnum
        {
            /// <summary>
            /// Enum R for value: r
            /// </summary>
            [EnumMember(Value = "r")]
            R = 1,

            /// <summary>
            /// Enum Rw for value: rw
            /// </summary>
            [EnumMember(Value = "rw")]
            Rw = 2

        }

        /// <summary>
        /// Gets or Sets SuperAdminPermission
        /// </summary>
        [DataMember(Name="superAdminPermission", EmitDefaultValue=true)]
        public SuperAdminPermissionEnum? SuperAdminPermission { get; set; }
        /// <summary>
        /// Defines Timezone
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TimezoneEnum
        {
            /// <summary>
            /// Enum EuropeAndorra for value: Europe/Andorra
            /// </summary>
            [EnumMember(Value = "Europe/Andorra")]
            EuropeAndorra = 1,

            /// <summary>
            /// Enum AsiaDubai for value: Asia/Dubai
            /// </summary>
            [EnumMember(Value = "Asia/Dubai")]
            AsiaDubai = 2,

            /// <summary>
            /// Enum AsiaKabul for value: Asia/Kabul
            /// </summary>
            [EnumMember(Value = "Asia/Kabul")]
            AsiaKabul = 3,

            /// <summary>
            /// Enum EuropeTirane for value: Europe/Tirane
            /// </summary>
            [EnumMember(Value = "Europe/Tirane")]
            EuropeTirane = 4,

            /// <summary>
            /// Enum AsiaYerevan for value: Asia/Yerevan
            /// </summary>
            [EnumMember(Value = "Asia/Yerevan")]
            AsiaYerevan = 5,

            /// <summary>
            /// Enum AntarcticaCasey for value: Antarctica/Casey
            /// </summary>
            [EnumMember(Value = "Antarctica/Casey")]
            AntarcticaCasey = 6,

            /// <summary>
            /// Enum AntarcticaDavis for value: Antarctica/Davis
            /// </summary>
            [EnumMember(Value = "Antarctica/Davis")]
            AntarcticaDavis = 7,

            /// <summary>
            /// Enum AntarcticaDumontDUrville for value: Antarctica/DumontDUrville
            /// </summary>
            [EnumMember(Value = "Antarctica/DumontDUrville")]
            AntarcticaDumontDUrville = 8,

            /// <summary>
            /// Enum AntarcticaMawson for value: Antarctica/Mawson
            /// </summary>
            [EnumMember(Value = "Antarctica/Mawson")]
            AntarcticaMawson = 9,

            /// <summary>
            /// Enum AntarcticaPalmer for value: Antarctica/Palmer
            /// </summary>
            [EnumMember(Value = "Antarctica/Palmer")]
            AntarcticaPalmer = 10,

            /// <summary>
            /// Enum AntarcticaRothera for value: Antarctica/Rothera
            /// </summary>
            [EnumMember(Value = "Antarctica/Rothera")]
            AntarcticaRothera = 11,

            /// <summary>
            /// Enum AntarcticaSyowa for value: Antarctica/Syowa
            /// </summary>
            [EnumMember(Value = "Antarctica/Syowa")]
            AntarcticaSyowa = 12,

            /// <summary>
            /// Enum AntarcticaTroll for value: Antarctica/Troll
            /// </summary>
            [EnumMember(Value = "Antarctica/Troll")]
            AntarcticaTroll = 13,

            /// <summary>
            /// Enum AntarcticaVostok for value: Antarctica/Vostok
            /// </summary>
            [EnumMember(Value = "Antarctica/Vostok")]
            AntarcticaVostok = 14,

            /// <summary>
            /// Enum AmericaArgentinaBuenosAires for value: America/Argentina/Buenos_Aires
            /// </summary>
            [EnumMember(Value = "America/Argentina/Buenos_Aires")]
            AmericaArgentinaBuenosAires = 15,

            /// <summary>
            /// Enum AmericaArgentinaCordoba for value: America/Argentina/Cordoba
            /// </summary>
            [EnumMember(Value = "America/Argentina/Cordoba")]
            AmericaArgentinaCordoba = 16,

            /// <summary>
            /// Enum AmericaArgentinaSalta for value: America/Argentina/Salta
            /// </summary>
            [EnumMember(Value = "America/Argentina/Salta")]
            AmericaArgentinaSalta = 17,

            /// <summary>
            /// Enum AmericaArgentinaJujuy for value: America/Argentina/Jujuy
            /// </summary>
            [EnumMember(Value = "America/Argentina/Jujuy")]
            AmericaArgentinaJujuy = 18,

            /// <summary>
            /// Enum AmericaArgentinaTucuman for value: America/Argentina/Tucuman
            /// </summary>
            [EnumMember(Value = "America/Argentina/Tucuman")]
            AmericaArgentinaTucuman = 19,

            /// <summary>
            /// Enum AmericaArgentinaCatamarca for value: America/Argentina/Catamarca
            /// </summary>
            [EnumMember(Value = "America/Argentina/Catamarca")]
            AmericaArgentinaCatamarca = 20,

            /// <summary>
            /// Enum AmericaArgentinaLaRioja for value: America/Argentina/La_Rioja
            /// </summary>
            [EnumMember(Value = "America/Argentina/La_Rioja")]
            AmericaArgentinaLaRioja = 21,

            /// <summary>
            /// Enum AmericaArgentinaSanJuan for value: America/Argentina/San_Juan
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Juan")]
            AmericaArgentinaSanJuan = 22,

            /// <summary>
            /// Enum AmericaArgentinaMendoza for value: America/Argentina/Mendoza
            /// </summary>
            [EnumMember(Value = "America/Argentina/Mendoza")]
            AmericaArgentinaMendoza = 23,

            /// <summary>
            /// Enum AmericaArgentinaSanLuis for value: America/Argentina/San_Luis
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Luis")]
            AmericaArgentinaSanLuis = 24,

            /// <summary>
            /// Enum AmericaArgentinaRioGallegos for value: America/Argentina/Rio_Gallegos
            /// </summary>
            [EnumMember(Value = "America/Argentina/Rio_Gallegos")]
            AmericaArgentinaRioGallegos = 25,

            /// <summary>
            /// Enum AmericaArgentinaUshuaia for value: America/Argentina/Ushuaia
            /// </summary>
            [EnumMember(Value = "America/Argentina/Ushuaia")]
            AmericaArgentinaUshuaia = 26,

            /// <summary>
            /// Enum PacificPagoPago for value: Pacific/Pago_Pago
            /// </summary>
            [EnumMember(Value = "Pacific/Pago_Pago")]
            PacificPagoPago = 27,

            /// <summary>
            /// Enum EuropeVienna for value: Europe/Vienna
            /// </summary>
            [EnumMember(Value = "Europe/Vienna")]
            EuropeVienna = 28,

            /// <summary>
            /// Enum AustraliaLordHowe for value: Australia/Lord_Howe
            /// </summary>
            [EnumMember(Value = "Australia/Lord_Howe")]
            AustraliaLordHowe = 29,

            /// <summary>
            /// Enum AntarcticaMacquarie for value: Antarctica/Macquarie
            /// </summary>
            [EnumMember(Value = "Antarctica/Macquarie")]
            AntarcticaMacquarie = 30,

            /// <summary>
            /// Enum AustraliaHobart for value: Australia/Hobart
            /// </summary>
            [EnumMember(Value = "Australia/Hobart")]
            AustraliaHobart = 31,

            /// <summary>
            /// Enum AustraliaCurrie for value: Australia/Currie
            /// </summary>
            [EnumMember(Value = "Australia/Currie")]
            AustraliaCurrie = 32,

            /// <summary>
            /// Enum AustraliaMelbourne for value: Australia/Melbourne
            /// </summary>
            [EnumMember(Value = "Australia/Melbourne")]
            AustraliaMelbourne = 33,

            /// <summary>
            /// Enum AustraliaSydney for value: Australia/Sydney
            /// </summary>
            [EnumMember(Value = "Australia/Sydney")]
            AustraliaSydney = 34,

            /// <summary>
            /// Enum AustraliaBrokenHill for value: Australia/Broken_Hill
            /// </summary>
            [EnumMember(Value = "Australia/Broken_Hill")]
            AustraliaBrokenHill = 35,

            /// <summary>
            /// Enum AustraliaBrisbane for value: Australia/Brisbane
            /// </summary>
            [EnumMember(Value = "Australia/Brisbane")]
            AustraliaBrisbane = 36,

            /// <summary>
            /// Enum AustraliaLindeman for value: Australia/Lindeman
            /// </summary>
            [EnumMember(Value = "Australia/Lindeman")]
            AustraliaLindeman = 37,

            /// <summary>
            /// Enum AustraliaAdelaide for value: Australia/Adelaide
            /// </summary>
            [EnumMember(Value = "Australia/Adelaide")]
            AustraliaAdelaide = 38,

            /// <summary>
            /// Enum AustraliaDarwin for value: Australia/Darwin
            /// </summary>
            [EnumMember(Value = "Australia/Darwin")]
            AustraliaDarwin = 39,

            /// <summary>
            /// Enum AustraliaPerth for value: Australia/Perth
            /// </summary>
            [EnumMember(Value = "Australia/Perth")]
            AustraliaPerth = 40,

            /// <summary>
            /// Enum AustraliaEucla for value: Australia/Eucla
            /// </summary>
            [EnumMember(Value = "Australia/Eucla")]
            AustraliaEucla = 41,

            /// <summary>
            /// Enum AsiaBaku for value: Asia/Baku
            /// </summary>
            [EnumMember(Value = "Asia/Baku")]
            AsiaBaku = 42,

            /// <summary>
            /// Enum AmericaBarbados for value: America/Barbados
            /// </summary>
            [EnumMember(Value = "America/Barbados")]
            AmericaBarbados = 43,

            /// <summary>
            /// Enum AsiaDhaka for value: Asia/Dhaka
            /// </summary>
            [EnumMember(Value = "Asia/Dhaka")]
            AsiaDhaka = 44,

            /// <summary>
            /// Enum EuropeBrussels for value: Europe/Brussels
            /// </summary>
            [EnumMember(Value = "Europe/Brussels")]
            EuropeBrussels = 45,

            /// <summary>
            /// Enum EuropeSofia for value: Europe/Sofia
            /// </summary>
            [EnumMember(Value = "Europe/Sofia")]
            EuropeSofia = 46,

            /// <summary>
            /// Enum AtlanticBermuda for value: Atlantic/Bermuda
            /// </summary>
            [EnumMember(Value = "Atlantic/Bermuda")]
            AtlanticBermuda = 47,

            /// <summary>
            /// Enum AsiaBrunei for value: Asia/Brunei
            /// </summary>
            [EnumMember(Value = "Asia/Brunei")]
            AsiaBrunei = 48,

            /// <summary>
            /// Enum AmericaLaPaz for value: America/La_Paz
            /// </summary>
            [EnumMember(Value = "America/La_Paz")]
            AmericaLaPaz = 49,

            /// <summary>
            /// Enum AmericaNoronha for value: America/Noronha
            /// </summary>
            [EnumMember(Value = "America/Noronha")]
            AmericaNoronha = 50,

            /// <summary>
            /// Enum AmericaBelem for value: America/Belem
            /// </summary>
            [EnumMember(Value = "America/Belem")]
            AmericaBelem = 51,

            /// <summary>
            /// Enum AmericaFortaleza for value: America/Fortaleza
            /// </summary>
            [EnumMember(Value = "America/Fortaleza")]
            AmericaFortaleza = 52,

            /// <summary>
            /// Enum AmericaRecife for value: America/Recife
            /// </summary>
            [EnumMember(Value = "America/Recife")]
            AmericaRecife = 53,

            /// <summary>
            /// Enum AmericaAraguaina for value: America/Araguaina
            /// </summary>
            [EnumMember(Value = "America/Araguaina")]
            AmericaAraguaina = 54,

            /// <summary>
            /// Enum AmericaMaceio for value: America/Maceio
            /// </summary>
            [EnumMember(Value = "America/Maceio")]
            AmericaMaceio = 55,

            /// <summary>
            /// Enum AmericaBahia for value: America/Bahia
            /// </summary>
            [EnumMember(Value = "America/Bahia")]
            AmericaBahia = 56,

            /// <summary>
            /// Enum AmericaSaoPaulo for value: America/Sao_Paulo
            /// </summary>
            [EnumMember(Value = "America/Sao_Paulo")]
            AmericaSaoPaulo = 57,

            /// <summary>
            /// Enum AmericaCampoGrande for value: America/Campo_Grande
            /// </summary>
            [EnumMember(Value = "America/Campo_Grande")]
            AmericaCampoGrande = 58,

            /// <summary>
            /// Enum AmericaCuiaba for value: America/Cuiaba
            /// </summary>
            [EnumMember(Value = "America/Cuiaba")]
            AmericaCuiaba = 59,

            /// <summary>
            /// Enum AmericaSantarem for value: America/Santarem
            /// </summary>
            [EnumMember(Value = "America/Santarem")]
            AmericaSantarem = 60,

            /// <summary>
            /// Enum AmericaPortoVelho for value: America/Porto_Velho
            /// </summary>
            [EnumMember(Value = "America/Porto_Velho")]
            AmericaPortoVelho = 61,

            /// <summary>
            /// Enum AmericaBoaVista for value: America/Boa_Vista
            /// </summary>
            [EnumMember(Value = "America/Boa_Vista")]
            AmericaBoaVista = 62,

            /// <summary>
            /// Enum AmericaManaus for value: America/Manaus
            /// </summary>
            [EnumMember(Value = "America/Manaus")]
            AmericaManaus = 63,

            /// <summary>
            /// Enum AmericaEirunepe for value: America/Eirunepe
            /// </summary>
            [EnumMember(Value = "America/Eirunepe")]
            AmericaEirunepe = 64,

            /// <summary>
            /// Enum AmericaRioBranco for value: America/Rio_Branco
            /// </summary>
            [EnumMember(Value = "America/Rio_Branco")]
            AmericaRioBranco = 65,

            /// <summary>
            /// Enum AmericaNassau for value: America/Nassau
            /// </summary>
            [EnumMember(Value = "America/Nassau")]
            AmericaNassau = 66,

            /// <summary>
            /// Enum AsiaThimphu for value: Asia/Thimphu
            /// </summary>
            [EnumMember(Value = "Asia/Thimphu")]
            AsiaThimphu = 67,

            /// <summary>
            /// Enum EuropeMinsk for value: Europe/Minsk
            /// </summary>
            [EnumMember(Value = "Europe/Minsk")]
            EuropeMinsk = 68,

            /// <summary>
            /// Enum AmericaBelize for value: America/Belize
            /// </summary>
            [EnumMember(Value = "America/Belize")]
            AmericaBelize = 69,

            /// <summary>
            /// Enum AmericaStJohns for value: America/St_Johns
            /// </summary>
            [EnumMember(Value = "America/St_Johns")]
            AmericaStJohns = 70,

            /// <summary>
            /// Enum AmericaHalifax for value: America/Halifax
            /// </summary>
            [EnumMember(Value = "America/Halifax")]
            AmericaHalifax = 71,

            /// <summary>
            /// Enum AmericaGlaceBay for value: America/Glace_Bay
            /// </summary>
            [EnumMember(Value = "America/Glace_Bay")]
            AmericaGlaceBay = 72,

            /// <summary>
            /// Enum AmericaMoncton for value: America/Moncton
            /// </summary>
            [EnumMember(Value = "America/Moncton")]
            AmericaMoncton = 73,

            /// <summary>
            /// Enum AmericaGooseBay for value: America/Goose_Bay
            /// </summary>
            [EnumMember(Value = "America/Goose_Bay")]
            AmericaGooseBay = 74,

            /// <summary>
            /// Enum AmericaBlancSablon for value: America/Blanc-Sablon
            /// </summary>
            [EnumMember(Value = "America/Blanc-Sablon")]
            AmericaBlancSablon = 75,

            /// <summary>
            /// Enum AmericaToronto for value: America/Toronto
            /// </summary>
            [EnumMember(Value = "America/Toronto")]
            AmericaToronto = 76,

            /// <summary>
            /// Enum AmericaNipigon for value: America/Nipigon
            /// </summary>
            [EnumMember(Value = "America/Nipigon")]
            AmericaNipigon = 77,

            /// <summary>
            /// Enum AmericaThunderBay for value: America/Thunder_Bay
            /// </summary>
            [EnumMember(Value = "America/Thunder_Bay")]
            AmericaThunderBay = 78,

            /// <summary>
            /// Enum AmericaIqaluit for value: America/Iqaluit
            /// </summary>
            [EnumMember(Value = "America/Iqaluit")]
            AmericaIqaluit = 79,

            /// <summary>
            /// Enum AmericaPangnirtung for value: America/Pangnirtung
            /// </summary>
            [EnumMember(Value = "America/Pangnirtung")]
            AmericaPangnirtung = 80,

            /// <summary>
            /// Enum AmericaAtikokan for value: America/Atikokan
            /// </summary>
            [EnumMember(Value = "America/Atikokan")]
            AmericaAtikokan = 81,

            /// <summary>
            /// Enum AmericaWinnipeg for value: America/Winnipeg
            /// </summary>
            [EnumMember(Value = "America/Winnipeg")]
            AmericaWinnipeg = 82,

            /// <summary>
            /// Enum AmericaRainyRiver for value: America/Rainy_River
            /// </summary>
            [EnumMember(Value = "America/Rainy_River")]
            AmericaRainyRiver = 83,

            /// <summary>
            /// Enum AmericaResolute for value: America/Resolute
            /// </summary>
            [EnumMember(Value = "America/Resolute")]
            AmericaResolute = 84,

            /// <summary>
            /// Enum AmericaRankinInlet for value: America/Rankin_Inlet
            /// </summary>
            [EnumMember(Value = "America/Rankin_Inlet")]
            AmericaRankinInlet = 85,

            /// <summary>
            /// Enum AmericaRegina for value: America/Regina
            /// </summary>
            [EnumMember(Value = "America/Regina")]
            AmericaRegina = 86,

            /// <summary>
            /// Enum AmericaSwiftCurrent for value: America/Swift_Current
            /// </summary>
            [EnumMember(Value = "America/Swift_Current")]
            AmericaSwiftCurrent = 87,

            /// <summary>
            /// Enum AmericaEdmonton for value: America/Edmonton
            /// </summary>
            [EnumMember(Value = "America/Edmonton")]
            AmericaEdmonton = 88,

            /// <summary>
            /// Enum AmericaCambridgeBay for value: America/Cambridge_Bay
            /// </summary>
            [EnumMember(Value = "America/Cambridge_Bay")]
            AmericaCambridgeBay = 89,

            /// <summary>
            /// Enum AmericaYellowknife for value: America/Yellowknife
            /// </summary>
            [EnumMember(Value = "America/Yellowknife")]
            AmericaYellowknife = 90,

            /// <summary>
            /// Enum AmericaInuvik for value: America/Inuvik
            /// </summary>
            [EnumMember(Value = "America/Inuvik")]
            AmericaInuvik = 91,

            /// <summary>
            /// Enum AmericaCreston for value: America/Creston
            /// </summary>
            [EnumMember(Value = "America/Creston")]
            AmericaCreston = 92,

            /// <summary>
            /// Enum AmericaDawsonCreek for value: America/Dawson_Creek
            /// </summary>
            [EnumMember(Value = "America/Dawson_Creek")]
            AmericaDawsonCreek = 93,

            /// <summary>
            /// Enum AmericaFortNelson for value: America/Fort_Nelson
            /// </summary>
            [EnumMember(Value = "America/Fort_Nelson")]
            AmericaFortNelson = 94,

            /// <summary>
            /// Enum AmericaVancouver for value: America/Vancouver
            /// </summary>
            [EnumMember(Value = "America/Vancouver")]
            AmericaVancouver = 95,

            /// <summary>
            /// Enum AmericaWhitehorse for value: America/Whitehorse
            /// </summary>
            [EnumMember(Value = "America/Whitehorse")]
            AmericaWhitehorse = 96,

            /// <summary>
            /// Enum AmericaDawson for value: America/Dawson
            /// </summary>
            [EnumMember(Value = "America/Dawson")]
            AmericaDawson = 97,

            /// <summary>
            /// Enum IndianCocos for value: Indian/Cocos
            /// </summary>
            [EnumMember(Value = "Indian/Cocos")]
            IndianCocos = 98,

            /// <summary>
            /// Enum EuropeZurich for value: Europe/Zurich
            /// </summary>
            [EnumMember(Value = "Europe/Zurich")]
            EuropeZurich = 99,

            /// <summary>
            /// Enum AfricaAbidjan for value: Africa/Abidjan
            /// </summary>
            [EnumMember(Value = "Africa/Abidjan")]
            AfricaAbidjan = 100,

            /// <summary>
            /// Enum PacificRarotonga for value: Pacific/Rarotonga
            /// </summary>
            [EnumMember(Value = "Pacific/Rarotonga")]
            PacificRarotonga = 101,

            /// <summary>
            /// Enum AmericaSantiago for value: America/Santiago
            /// </summary>
            [EnumMember(Value = "America/Santiago")]
            AmericaSantiago = 102,

            /// <summary>
            /// Enum AmericaPuntaArenas for value: America/Punta_Arenas
            /// </summary>
            [EnumMember(Value = "America/Punta_Arenas")]
            AmericaPuntaArenas = 103,

            /// <summary>
            /// Enum PacificEaster for value: Pacific/Easter
            /// </summary>
            [EnumMember(Value = "Pacific/Easter")]
            PacificEaster = 104,

            /// <summary>
            /// Enum AsiaShanghai for value: Asia/Shanghai
            /// </summary>
            [EnumMember(Value = "Asia/Shanghai")]
            AsiaShanghai = 105,

            /// <summary>
            /// Enum AsiaUrumqi for value: Asia/Urumqi
            /// </summary>
            [EnumMember(Value = "Asia/Urumqi")]
            AsiaUrumqi = 106,

            /// <summary>
            /// Enum AmericaBogota for value: America/Bogota
            /// </summary>
            [EnumMember(Value = "America/Bogota")]
            AmericaBogota = 107,

            /// <summary>
            /// Enum AmericaCostaRica for value: America/Costa_Rica
            /// </summary>
            [EnumMember(Value = "America/Costa_Rica")]
            AmericaCostaRica = 108,

            /// <summary>
            /// Enum AmericaHavana for value: America/Havana
            /// </summary>
            [EnumMember(Value = "America/Havana")]
            AmericaHavana = 109,

            /// <summary>
            /// Enum AtlanticCapeVerde for value: Atlantic/Cape_Verde
            /// </summary>
            [EnumMember(Value = "Atlantic/Cape_Verde")]
            AtlanticCapeVerde = 110,

            /// <summary>
            /// Enum AmericaCuracao for value: America/Curacao
            /// </summary>
            [EnumMember(Value = "America/Curacao")]
            AmericaCuracao = 111,

            /// <summary>
            /// Enum IndianChristmas for value: Indian/Christmas
            /// </summary>
            [EnumMember(Value = "Indian/Christmas")]
            IndianChristmas = 112,

            /// <summary>
            /// Enum AsiaNicosia for value: Asia/Nicosia
            /// </summary>
            [EnumMember(Value = "Asia/Nicosia")]
            AsiaNicosia = 113,

            /// <summary>
            /// Enum AsiaFamagusta for value: Asia/Famagusta
            /// </summary>
            [EnumMember(Value = "Asia/Famagusta")]
            AsiaFamagusta = 114,

            /// <summary>
            /// Enum EuropePrague for value: Europe/Prague
            /// </summary>
            [EnumMember(Value = "Europe/Prague")]
            EuropePrague = 115,

            /// <summary>
            /// Enum EuropeBerlin for value: Europe/Berlin
            /// </summary>
            [EnumMember(Value = "Europe/Berlin")]
            EuropeBerlin = 116,

            /// <summary>
            /// Enum EuropeCopenhagen for value: Europe/Copenhagen
            /// </summary>
            [EnumMember(Value = "Europe/Copenhagen")]
            EuropeCopenhagen = 117,

            /// <summary>
            /// Enum AmericaSantoDomingo for value: America/Santo_Domingo
            /// </summary>
            [EnumMember(Value = "America/Santo_Domingo")]
            AmericaSantoDomingo = 118,

            /// <summary>
            /// Enum AfricaAlgiers for value: Africa/Algiers
            /// </summary>
            [EnumMember(Value = "Africa/Algiers")]
            AfricaAlgiers = 119,

            /// <summary>
            /// Enum AmericaGuayaquil for value: America/Guayaquil
            /// </summary>
            [EnumMember(Value = "America/Guayaquil")]
            AmericaGuayaquil = 120,

            /// <summary>
            /// Enum PacificGalapagos for value: Pacific/Galapagos
            /// </summary>
            [EnumMember(Value = "Pacific/Galapagos")]
            PacificGalapagos = 121,

            /// <summary>
            /// Enum EuropeTallinn for value: Europe/Tallinn
            /// </summary>
            [EnumMember(Value = "Europe/Tallinn")]
            EuropeTallinn = 122,

            /// <summary>
            /// Enum AfricaCairo for value: Africa/Cairo
            /// </summary>
            [EnumMember(Value = "Africa/Cairo")]
            AfricaCairo = 123,

            /// <summary>
            /// Enum AfricaElAaiun for value: Africa/El_Aaiun
            /// </summary>
            [EnumMember(Value = "Africa/El_Aaiun")]
            AfricaElAaiun = 124,

            /// <summary>
            /// Enum EuropeMadrid for value: Europe/Madrid
            /// </summary>
            [EnumMember(Value = "Europe/Madrid")]
            EuropeMadrid = 125,

            /// <summary>
            /// Enum AfricaCeuta for value: Africa/Ceuta
            /// </summary>
            [EnumMember(Value = "Africa/Ceuta")]
            AfricaCeuta = 126,

            /// <summary>
            /// Enum AtlanticCanary for value: Atlantic/Canary
            /// </summary>
            [EnumMember(Value = "Atlantic/Canary")]
            AtlanticCanary = 127,

            /// <summary>
            /// Enum EuropeHelsinki for value: Europe/Helsinki
            /// </summary>
            [EnumMember(Value = "Europe/Helsinki")]
            EuropeHelsinki = 128,

            /// <summary>
            /// Enum PacificFiji for value: Pacific/Fiji
            /// </summary>
            [EnumMember(Value = "Pacific/Fiji")]
            PacificFiji = 129,

            /// <summary>
            /// Enum AtlanticStanley for value: Atlantic/Stanley
            /// </summary>
            [EnumMember(Value = "Atlantic/Stanley")]
            AtlanticStanley = 130,

            /// <summary>
            /// Enum PacificChuuk for value: Pacific/Chuuk
            /// </summary>
            [EnumMember(Value = "Pacific/Chuuk")]
            PacificChuuk = 131,

            /// <summary>
            /// Enum PacificPohnpei for value: Pacific/Pohnpei
            /// </summary>
            [EnumMember(Value = "Pacific/Pohnpei")]
            PacificPohnpei = 132,

            /// <summary>
            /// Enum PacificKosrae for value: Pacific/Kosrae
            /// </summary>
            [EnumMember(Value = "Pacific/Kosrae")]
            PacificKosrae = 133,

            /// <summary>
            /// Enum AtlanticFaroe for value: Atlantic/Faroe
            /// </summary>
            [EnumMember(Value = "Atlantic/Faroe")]
            AtlanticFaroe = 134,

            /// <summary>
            /// Enum EuropeParis for value: Europe/Paris
            /// </summary>
            [EnumMember(Value = "Europe/Paris")]
            EuropeParis = 135,

            /// <summary>
            /// Enum EuropeLondon for value: Europe/London
            /// </summary>
            [EnumMember(Value = "Europe/London")]
            EuropeLondon = 136,

            /// <summary>
            /// Enum AsiaTbilisi for value: Asia/Tbilisi
            /// </summary>
            [EnumMember(Value = "Asia/Tbilisi")]
            AsiaTbilisi = 137,

            /// <summary>
            /// Enum AmericaCayenne for value: America/Cayenne
            /// </summary>
            [EnumMember(Value = "America/Cayenne")]
            AmericaCayenne = 138,

            /// <summary>
            /// Enum AfricaAccra for value: Africa/Accra
            /// </summary>
            [EnumMember(Value = "Africa/Accra")]
            AfricaAccra = 139,

            /// <summary>
            /// Enum EuropeGibraltar for value: Europe/Gibraltar
            /// </summary>
            [EnumMember(Value = "Europe/Gibraltar")]
            EuropeGibraltar = 140,

            /// <summary>
            /// Enum AmericaGodthab for value: America/Godthab
            /// </summary>
            [EnumMember(Value = "America/Godthab")]
            AmericaGodthab = 141,

            /// <summary>
            /// Enum AmericaDanmarkshavn for value: America/Danmarkshavn
            /// </summary>
            [EnumMember(Value = "America/Danmarkshavn")]
            AmericaDanmarkshavn = 142,

            /// <summary>
            /// Enum AmericaScoresbysund for value: America/Scoresbysund
            /// </summary>
            [EnumMember(Value = "America/Scoresbysund")]
            AmericaScoresbysund = 143,

            /// <summary>
            /// Enum AmericaThule for value: America/Thule
            /// </summary>
            [EnumMember(Value = "America/Thule")]
            AmericaThule = 144,

            /// <summary>
            /// Enum EuropeAthens for value: Europe/Athens
            /// </summary>
            [EnumMember(Value = "Europe/Athens")]
            EuropeAthens = 145,

            /// <summary>
            /// Enum AtlanticSouthGeorgia for value: Atlantic/South_Georgia
            /// </summary>
            [EnumMember(Value = "Atlantic/South_Georgia")]
            AtlanticSouthGeorgia = 146,

            /// <summary>
            /// Enum AmericaGuatemala for value: America/Guatemala
            /// </summary>
            [EnumMember(Value = "America/Guatemala")]
            AmericaGuatemala = 147,

            /// <summary>
            /// Enum PacificGuam for value: Pacific/Guam
            /// </summary>
            [EnumMember(Value = "Pacific/Guam")]
            PacificGuam = 148,

            /// <summary>
            /// Enum AfricaBissau for value: Africa/Bissau
            /// </summary>
            [EnumMember(Value = "Africa/Bissau")]
            AfricaBissau = 149,

            /// <summary>
            /// Enum AmericaGuyana for value: America/Guyana
            /// </summary>
            [EnumMember(Value = "America/Guyana")]
            AmericaGuyana = 150,

            /// <summary>
            /// Enum AsiaHongKong for value: Asia/Hong_Kong
            /// </summary>
            [EnumMember(Value = "Asia/Hong_Kong")]
            AsiaHongKong = 151,

            /// <summary>
            /// Enum AmericaTegucigalpa for value: America/Tegucigalpa
            /// </summary>
            [EnumMember(Value = "America/Tegucigalpa")]
            AmericaTegucigalpa = 152,

            /// <summary>
            /// Enum AmericaPortAuPrince for value: America/Port-au-Prince
            /// </summary>
            [EnumMember(Value = "America/Port-au-Prince")]
            AmericaPortAuPrince = 153,

            /// <summary>
            /// Enum EuropeBudapest for value: Europe/Budapest
            /// </summary>
            [EnumMember(Value = "Europe/Budapest")]
            EuropeBudapest = 154,

            /// <summary>
            /// Enum AsiaJakarta for value: Asia/Jakarta
            /// </summary>
            [EnumMember(Value = "Asia/Jakarta")]
            AsiaJakarta = 155,

            /// <summary>
            /// Enum AsiaPontianak for value: Asia/Pontianak
            /// </summary>
            [EnumMember(Value = "Asia/Pontianak")]
            AsiaPontianak = 156,

            /// <summary>
            /// Enum AsiaMakassar for value: Asia/Makassar
            /// </summary>
            [EnumMember(Value = "Asia/Makassar")]
            AsiaMakassar = 157,

            /// <summary>
            /// Enum AsiaJayapura for value: Asia/Jayapura
            /// </summary>
            [EnumMember(Value = "Asia/Jayapura")]
            AsiaJayapura = 158,

            /// <summary>
            /// Enum EuropeDublin for value: Europe/Dublin
            /// </summary>
            [EnumMember(Value = "Europe/Dublin")]
            EuropeDublin = 159,

            /// <summary>
            /// Enum AsiaJerusalem for value: Asia/Jerusalem
            /// </summary>
            [EnumMember(Value = "Asia/Jerusalem")]
            AsiaJerusalem = 160,

            /// <summary>
            /// Enum AsiaKolkata for value: Asia/Kolkata
            /// </summary>
            [EnumMember(Value = "Asia/Kolkata")]
            AsiaKolkata = 161,

            /// <summary>
            /// Enum IndianChagos for value: Indian/Chagos
            /// </summary>
            [EnumMember(Value = "Indian/Chagos")]
            IndianChagos = 162,

            /// <summary>
            /// Enum AsiaBaghdad for value: Asia/Baghdad
            /// </summary>
            [EnumMember(Value = "Asia/Baghdad")]
            AsiaBaghdad = 163,

            /// <summary>
            /// Enum AsiaTehran for value: Asia/Tehran
            /// </summary>
            [EnumMember(Value = "Asia/Tehran")]
            AsiaTehran = 164,

            /// <summary>
            /// Enum AtlanticReykjavik for value: Atlantic/Reykjavik
            /// </summary>
            [EnumMember(Value = "Atlantic/Reykjavik")]
            AtlanticReykjavik = 165,

            /// <summary>
            /// Enum EuropeRome for value: Europe/Rome
            /// </summary>
            [EnumMember(Value = "Europe/Rome")]
            EuropeRome = 166,

            /// <summary>
            /// Enum AmericaJamaica for value: America/Jamaica
            /// </summary>
            [EnumMember(Value = "America/Jamaica")]
            AmericaJamaica = 167,

            /// <summary>
            /// Enum AsiaAmman for value: Asia/Amman
            /// </summary>
            [EnumMember(Value = "Asia/Amman")]
            AsiaAmman = 168,

            /// <summary>
            /// Enum AsiaTokyo for value: Asia/Tokyo
            /// </summary>
            [EnumMember(Value = "Asia/Tokyo")]
            AsiaTokyo = 169,

            /// <summary>
            /// Enum AfricaNairobi for value: Africa/Nairobi
            /// </summary>
            [EnumMember(Value = "Africa/Nairobi")]
            AfricaNairobi = 170,

            /// <summary>
            /// Enum AsiaBishkek for value: Asia/Bishkek
            /// </summary>
            [EnumMember(Value = "Asia/Bishkek")]
            AsiaBishkek = 171,

            /// <summary>
            /// Enum PacificTarawa for value: Pacific/Tarawa
            /// </summary>
            [EnumMember(Value = "Pacific/Tarawa")]
            PacificTarawa = 172,

            /// <summary>
            /// Enum PacificEnderbury for value: Pacific/Enderbury
            /// </summary>
            [EnumMember(Value = "Pacific/Enderbury")]
            PacificEnderbury = 173,

            /// <summary>
            /// Enum PacificKiritimati for value: Pacific/Kiritimati
            /// </summary>
            [EnumMember(Value = "Pacific/Kiritimati")]
            PacificKiritimati = 174,

            /// <summary>
            /// Enum AsiaPyongyang for value: Asia/Pyongyang
            /// </summary>
            [EnumMember(Value = "Asia/Pyongyang")]
            AsiaPyongyang = 175,

            /// <summary>
            /// Enum AsiaSeoul for value: Asia/Seoul
            /// </summary>
            [EnumMember(Value = "Asia/Seoul")]
            AsiaSeoul = 176,

            /// <summary>
            /// Enum AsiaAlmaty for value: Asia/Almaty
            /// </summary>
            [EnumMember(Value = "Asia/Almaty")]
            AsiaAlmaty = 177,

            /// <summary>
            /// Enum AsiaQyzylorda for value: Asia/Qyzylorda
            /// </summary>
            [EnumMember(Value = "Asia/Qyzylorda")]
            AsiaQyzylorda = 178,

            /// <summary>
            /// Enum AsiaQostanay for value: Asia/Qostanay
            /// </summary>
            [EnumMember(Value = "Asia/Qostanay")]
            AsiaQostanay = 179,

            /// <summary>
            /// Enum AsiaAqtobe for value: Asia/Aqtobe
            /// </summary>
            [EnumMember(Value = "Asia/Aqtobe")]
            AsiaAqtobe = 180,

            /// <summary>
            /// Enum AsiaAqtau for value: Asia/Aqtau
            /// </summary>
            [EnumMember(Value = "Asia/Aqtau")]
            AsiaAqtau = 181,

            /// <summary>
            /// Enum AsiaAtyrau for value: Asia/Atyrau
            /// </summary>
            [EnumMember(Value = "Asia/Atyrau")]
            AsiaAtyrau = 182,

            /// <summary>
            /// Enum AsiaOral for value: Asia/Oral
            /// </summary>
            [EnumMember(Value = "Asia/Oral")]
            AsiaOral = 183,

            /// <summary>
            /// Enum AsiaBeirut for value: Asia/Beirut
            /// </summary>
            [EnumMember(Value = "Asia/Beirut")]
            AsiaBeirut = 184,

            /// <summary>
            /// Enum AsiaColombo for value: Asia/Colombo
            /// </summary>
            [EnumMember(Value = "Asia/Colombo")]
            AsiaColombo = 185,

            /// <summary>
            /// Enum AfricaMonrovia for value: Africa/Monrovia
            /// </summary>
            [EnumMember(Value = "Africa/Monrovia")]
            AfricaMonrovia = 186,

            /// <summary>
            /// Enum EuropeVilnius for value: Europe/Vilnius
            /// </summary>
            [EnumMember(Value = "Europe/Vilnius")]
            EuropeVilnius = 187,

            /// <summary>
            /// Enum EuropeLuxembourg for value: Europe/Luxembourg
            /// </summary>
            [EnumMember(Value = "Europe/Luxembourg")]
            EuropeLuxembourg = 188,

            /// <summary>
            /// Enum EuropeRiga for value: Europe/Riga
            /// </summary>
            [EnumMember(Value = "Europe/Riga")]
            EuropeRiga = 189,

            /// <summary>
            /// Enum AfricaTripoli for value: Africa/Tripoli
            /// </summary>
            [EnumMember(Value = "Africa/Tripoli")]
            AfricaTripoli = 190,

            /// <summary>
            /// Enum AfricaCasablanca for value: Africa/Casablanca
            /// </summary>
            [EnumMember(Value = "Africa/Casablanca")]
            AfricaCasablanca = 191,

            /// <summary>
            /// Enum EuropeMonaco for value: Europe/Monaco
            /// </summary>
            [EnumMember(Value = "Europe/Monaco")]
            EuropeMonaco = 192,

            /// <summary>
            /// Enum EuropeChisinau for value: Europe/Chisinau
            /// </summary>
            [EnumMember(Value = "Europe/Chisinau")]
            EuropeChisinau = 193,

            /// <summary>
            /// Enum PacificMajuro for value: Pacific/Majuro
            /// </summary>
            [EnumMember(Value = "Pacific/Majuro")]
            PacificMajuro = 194,

            /// <summary>
            /// Enum PacificKwajalein for value: Pacific/Kwajalein
            /// </summary>
            [EnumMember(Value = "Pacific/Kwajalein")]
            PacificKwajalein = 195,

            /// <summary>
            /// Enum AsiaYangon for value: Asia/Yangon
            /// </summary>
            [EnumMember(Value = "Asia/Yangon")]
            AsiaYangon = 196,

            /// <summary>
            /// Enum AsiaUlaanbaatar for value: Asia/Ulaanbaatar
            /// </summary>
            [EnumMember(Value = "Asia/Ulaanbaatar")]
            AsiaUlaanbaatar = 197,

            /// <summary>
            /// Enum AsiaHovd for value: Asia/Hovd
            /// </summary>
            [EnumMember(Value = "Asia/Hovd")]
            AsiaHovd = 198,

            /// <summary>
            /// Enum AsiaChoibalsan for value: Asia/Choibalsan
            /// </summary>
            [EnumMember(Value = "Asia/Choibalsan")]
            AsiaChoibalsan = 199,

            /// <summary>
            /// Enum AsiaMacau for value: Asia/Macau
            /// </summary>
            [EnumMember(Value = "Asia/Macau")]
            AsiaMacau = 200,

            /// <summary>
            /// Enum AmericaMartinique for value: America/Martinique
            /// </summary>
            [EnumMember(Value = "America/Martinique")]
            AmericaMartinique = 201,

            /// <summary>
            /// Enum EuropeMalta for value: Europe/Malta
            /// </summary>
            [EnumMember(Value = "Europe/Malta")]
            EuropeMalta = 202,

            /// <summary>
            /// Enum IndianMauritius for value: Indian/Mauritius
            /// </summary>
            [EnumMember(Value = "Indian/Mauritius")]
            IndianMauritius = 203,

            /// <summary>
            /// Enum IndianMaldives for value: Indian/Maldives
            /// </summary>
            [EnumMember(Value = "Indian/Maldives")]
            IndianMaldives = 204,

            /// <summary>
            /// Enum AmericaMexicoCity for value: America/Mexico_City
            /// </summary>
            [EnumMember(Value = "America/Mexico_City")]
            AmericaMexicoCity = 205,

            /// <summary>
            /// Enum AmericaCancun for value: America/Cancun
            /// </summary>
            [EnumMember(Value = "America/Cancun")]
            AmericaCancun = 206,

            /// <summary>
            /// Enum AmericaMerida for value: America/Merida
            /// </summary>
            [EnumMember(Value = "America/Merida")]
            AmericaMerida = 207,

            /// <summary>
            /// Enum AmericaMonterrey for value: America/Monterrey
            /// </summary>
            [EnumMember(Value = "America/Monterrey")]
            AmericaMonterrey = 208,

            /// <summary>
            /// Enum AmericaMatamoros for value: America/Matamoros
            /// </summary>
            [EnumMember(Value = "America/Matamoros")]
            AmericaMatamoros = 209,

            /// <summary>
            /// Enum AmericaMazatlan for value: America/Mazatlan
            /// </summary>
            [EnumMember(Value = "America/Mazatlan")]
            AmericaMazatlan = 210,

            /// <summary>
            /// Enum AmericaChihuahua for value: America/Chihuahua
            /// </summary>
            [EnumMember(Value = "America/Chihuahua")]
            AmericaChihuahua = 211,

            /// <summary>
            /// Enum AmericaOjinaga for value: America/Ojinaga
            /// </summary>
            [EnumMember(Value = "America/Ojinaga")]
            AmericaOjinaga = 212,

            /// <summary>
            /// Enum AmericaHermosillo for value: America/Hermosillo
            /// </summary>
            [EnumMember(Value = "America/Hermosillo")]
            AmericaHermosillo = 213,

            /// <summary>
            /// Enum AmericaTijuana for value: America/Tijuana
            /// </summary>
            [EnumMember(Value = "America/Tijuana")]
            AmericaTijuana = 214,

            /// <summary>
            /// Enum AmericaBahiaBanderas for value: America/Bahia_Banderas
            /// </summary>
            [EnumMember(Value = "America/Bahia_Banderas")]
            AmericaBahiaBanderas = 215,

            /// <summary>
            /// Enum AsiaKualaLumpur for value: Asia/Kuala_Lumpur
            /// </summary>
            [EnumMember(Value = "Asia/Kuala_Lumpur")]
            AsiaKualaLumpur = 216,

            /// <summary>
            /// Enum AsiaKuching for value: Asia/Kuching
            /// </summary>
            [EnumMember(Value = "Asia/Kuching")]
            AsiaKuching = 217,

            /// <summary>
            /// Enum AfricaMaputo for value: Africa/Maputo
            /// </summary>
            [EnumMember(Value = "Africa/Maputo")]
            AfricaMaputo = 218,

            /// <summary>
            /// Enum AfricaWindhoek for value: Africa/Windhoek
            /// </summary>
            [EnumMember(Value = "Africa/Windhoek")]
            AfricaWindhoek = 219,

            /// <summary>
            /// Enum PacificNoumea for value: Pacific/Noumea
            /// </summary>
            [EnumMember(Value = "Pacific/Noumea")]
            PacificNoumea = 220,

            /// <summary>
            /// Enum PacificNorfolk for value: Pacific/Norfolk
            /// </summary>
            [EnumMember(Value = "Pacific/Norfolk")]
            PacificNorfolk = 221,

            /// <summary>
            /// Enum AfricaLagos for value: Africa/Lagos
            /// </summary>
            [EnumMember(Value = "Africa/Lagos")]
            AfricaLagos = 222,

            /// <summary>
            /// Enum AmericaManagua for value: America/Managua
            /// </summary>
            [EnumMember(Value = "America/Managua")]
            AmericaManagua = 223,

            /// <summary>
            /// Enum EuropeAmsterdam for value: Europe/Amsterdam
            /// </summary>
            [EnumMember(Value = "Europe/Amsterdam")]
            EuropeAmsterdam = 224,

            /// <summary>
            /// Enum EuropeOslo for value: Europe/Oslo
            /// </summary>
            [EnumMember(Value = "Europe/Oslo")]
            EuropeOslo = 225,

            /// <summary>
            /// Enum AsiaKathmandu for value: Asia/Kathmandu
            /// </summary>
            [EnumMember(Value = "Asia/Kathmandu")]
            AsiaKathmandu = 226,

            /// <summary>
            /// Enum PacificNauru for value: Pacific/Nauru
            /// </summary>
            [EnumMember(Value = "Pacific/Nauru")]
            PacificNauru = 227,

            /// <summary>
            /// Enum PacificNiue for value: Pacific/Niue
            /// </summary>
            [EnumMember(Value = "Pacific/Niue")]
            PacificNiue = 228,

            /// <summary>
            /// Enum PacificAuckland for value: Pacific/Auckland
            /// </summary>
            [EnumMember(Value = "Pacific/Auckland")]
            PacificAuckland = 229,

            /// <summary>
            /// Enum PacificChatham for value: Pacific/Chatham
            /// </summary>
            [EnumMember(Value = "Pacific/Chatham")]
            PacificChatham = 230,

            /// <summary>
            /// Enum AmericaPanama for value: America/Panama
            /// </summary>
            [EnumMember(Value = "America/Panama")]
            AmericaPanama = 231,

            /// <summary>
            /// Enum AmericaLima for value: America/Lima
            /// </summary>
            [EnumMember(Value = "America/Lima")]
            AmericaLima = 232,

            /// <summary>
            /// Enum PacificTahiti for value: Pacific/Tahiti
            /// </summary>
            [EnumMember(Value = "Pacific/Tahiti")]
            PacificTahiti = 233,

            /// <summary>
            /// Enum PacificMarquesas for value: Pacific/Marquesas
            /// </summary>
            [EnumMember(Value = "Pacific/Marquesas")]
            PacificMarquesas = 234,

            /// <summary>
            /// Enum PacificGambier for value: Pacific/Gambier
            /// </summary>
            [EnumMember(Value = "Pacific/Gambier")]
            PacificGambier = 235,

            /// <summary>
            /// Enum PacificPortMoresby for value: Pacific/Port_Moresby
            /// </summary>
            [EnumMember(Value = "Pacific/Port_Moresby")]
            PacificPortMoresby = 236,

            /// <summary>
            /// Enum PacificBougainville for value: Pacific/Bougainville
            /// </summary>
            [EnumMember(Value = "Pacific/Bougainville")]
            PacificBougainville = 237,

            /// <summary>
            /// Enum AsiaManila for value: Asia/Manila
            /// </summary>
            [EnumMember(Value = "Asia/Manila")]
            AsiaManila = 238,

            /// <summary>
            /// Enum AsiaKarachi for value: Asia/Karachi
            /// </summary>
            [EnumMember(Value = "Asia/Karachi")]
            AsiaKarachi = 239,

            /// <summary>
            /// Enum EuropeWarsaw for value: Europe/Warsaw
            /// </summary>
            [EnumMember(Value = "Europe/Warsaw")]
            EuropeWarsaw = 240,

            /// <summary>
            /// Enum AmericaMiquelon for value: America/Miquelon
            /// </summary>
            [EnumMember(Value = "America/Miquelon")]
            AmericaMiquelon = 241,

            /// <summary>
            /// Enum PacificPitcairn for value: Pacific/Pitcairn
            /// </summary>
            [EnumMember(Value = "Pacific/Pitcairn")]
            PacificPitcairn = 242,

            /// <summary>
            /// Enum AmericaPuertoRico for value: America/Puerto_Rico
            /// </summary>
            [EnumMember(Value = "America/Puerto_Rico")]
            AmericaPuertoRico = 243,

            /// <summary>
            /// Enum AsiaGaza for value: Asia/Gaza
            /// </summary>
            [EnumMember(Value = "Asia/Gaza")]
            AsiaGaza = 244,

            /// <summary>
            /// Enum AsiaHebron for value: Asia/Hebron
            /// </summary>
            [EnumMember(Value = "Asia/Hebron")]
            AsiaHebron = 245,

            /// <summary>
            /// Enum EuropeLisbon for value: Europe/Lisbon
            /// </summary>
            [EnumMember(Value = "Europe/Lisbon")]
            EuropeLisbon = 246,

            /// <summary>
            /// Enum AtlanticMadeira for value: Atlantic/Madeira
            /// </summary>
            [EnumMember(Value = "Atlantic/Madeira")]
            AtlanticMadeira = 247,

            /// <summary>
            /// Enum AtlanticAzores for value: Atlantic/Azores
            /// </summary>
            [EnumMember(Value = "Atlantic/Azores")]
            AtlanticAzores = 248,

            /// <summary>
            /// Enum PacificPalau for value: Pacific/Palau
            /// </summary>
            [EnumMember(Value = "Pacific/Palau")]
            PacificPalau = 249,

            /// <summary>
            /// Enum AmericaAsuncion for value: America/Asuncion
            /// </summary>
            [EnumMember(Value = "America/Asuncion")]
            AmericaAsuncion = 250,

            /// <summary>
            /// Enum AsiaQatar for value: Asia/Qatar
            /// </summary>
            [EnumMember(Value = "Asia/Qatar")]
            AsiaQatar = 251,

            /// <summary>
            /// Enum IndianReunion for value: Indian/Reunion
            /// </summary>
            [EnumMember(Value = "Indian/Reunion")]
            IndianReunion = 252,

            /// <summary>
            /// Enum EuropeBucharest for value: Europe/Bucharest
            /// </summary>
            [EnumMember(Value = "Europe/Bucharest")]
            EuropeBucharest = 253,

            /// <summary>
            /// Enum EuropeBelgrade for value: Europe/Belgrade
            /// </summary>
            [EnumMember(Value = "Europe/Belgrade")]
            EuropeBelgrade = 254,

            /// <summary>
            /// Enum EuropeKaliningrad for value: Europe/Kaliningrad
            /// </summary>
            [EnumMember(Value = "Europe/Kaliningrad")]
            EuropeKaliningrad = 255,

            /// <summary>
            /// Enum EuropeMoscow for value: Europe/Moscow
            /// </summary>
            [EnumMember(Value = "Europe/Moscow")]
            EuropeMoscow = 256,

            /// <summary>
            /// Enum EuropeSimferopol for value: Europe/Simferopol
            /// </summary>
            [EnumMember(Value = "Europe/Simferopol")]
            EuropeSimferopol = 257,

            /// <summary>
            /// Enum EuropeKirov for value: Europe/Kirov
            /// </summary>
            [EnumMember(Value = "Europe/Kirov")]
            EuropeKirov = 258,

            /// <summary>
            /// Enum EuropeAstrakhan for value: Europe/Astrakhan
            /// </summary>
            [EnumMember(Value = "Europe/Astrakhan")]
            EuropeAstrakhan = 259,

            /// <summary>
            /// Enum EuropeVolgograd for value: Europe/Volgograd
            /// </summary>
            [EnumMember(Value = "Europe/Volgograd")]
            EuropeVolgograd = 260,

            /// <summary>
            /// Enum EuropeSaratov for value: Europe/Saratov
            /// </summary>
            [EnumMember(Value = "Europe/Saratov")]
            EuropeSaratov = 261,

            /// <summary>
            /// Enum EuropeUlyanovsk for value: Europe/Ulyanovsk
            /// </summary>
            [EnumMember(Value = "Europe/Ulyanovsk")]
            EuropeUlyanovsk = 262,

            /// <summary>
            /// Enum EuropeSamara for value: Europe/Samara
            /// </summary>
            [EnumMember(Value = "Europe/Samara")]
            EuropeSamara = 263,

            /// <summary>
            /// Enum AsiaYekaterinburg for value: Asia/Yekaterinburg
            /// </summary>
            [EnumMember(Value = "Asia/Yekaterinburg")]
            AsiaYekaterinburg = 264,

            /// <summary>
            /// Enum AsiaOmsk for value: Asia/Omsk
            /// </summary>
            [EnumMember(Value = "Asia/Omsk")]
            AsiaOmsk = 265,

            /// <summary>
            /// Enum AsiaNovosibirsk for value: Asia/Novosibirsk
            /// </summary>
            [EnumMember(Value = "Asia/Novosibirsk")]
            AsiaNovosibirsk = 266,

            /// <summary>
            /// Enum AsiaBarnaul for value: Asia/Barnaul
            /// </summary>
            [EnumMember(Value = "Asia/Barnaul")]
            AsiaBarnaul = 267,

            /// <summary>
            /// Enum AsiaTomsk for value: Asia/Tomsk
            /// </summary>
            [EnumMember(Value = "Asia/Tomsk")]
            AsiaTomsk = 268,

            /// <summary>
            /// Enum AsiaNovokuznetsk for value: Asia/Novokuznetsk
            /// </summary>
            [EnumMember(Value = "Asia/Novokuznetsk")]
            AsiaNovokuznetsk = 269,

            /// <summary>
            /// Enum AsiaKrasnoyarsk for value: Asia/Krasnoyarsk
            /// </summary>
            [EnumMember(Value = "Asia/Krasnoyarsk")]
            AsiaKrasnoyarsk = 270,

            /// <summary>
            /// Enum AsiaIrkutsk for value: Asia/Irkutsk
            /// </summary>
            [EnumMember(Value = "Asia/Irkutsk")]
            AsiaIrkutsk = 271,

            /// <summary>
            /// Enum AsiaChita for value: Asia/Chita
            /// </summary>
            [EnumMember(Value = "Asia/Chita")]
            AsiaChita = 272,

            /// <summary>
            /// Enum AsiaYakutsk for value: Asia/Yakutsk
            /// </summary>
            [EnumMember(Value = "Asia/Yakutsk")]
            AsiaYakutsk = 273,

            /// <summary>
            /// Enum AsiaKhandyga for value: Asia/Khandyga
            /// </summary>
            [EnumMember(Value = "Asia/Khandyga")]
            AsiaKhandyga = 274,

            /// <summary>
            /// Enum AsiaVladivostok for value: Asia/Vladivostok
            /// </summary>
            [EnumMember(Value = "Asia/Vladivostok")]
            AsiaVladivostok = 275,

            /// <summary>
            /// Enum AsiaUstNera for value: Asia/Ust-Nera
            /// </summary>
            [EnumMember(Value = "Asia/Ust-Nera")]
            AsiaUstNera = 276,

            /// <summary>
            /// Enum AsiaMagadan for value: Asia/Magadan
            /// </summary>
            [EnumMember(Value = "Asia/Magadan")]
            AsiaMagadan = 277,

            /// <summary>
            /// Enum AsiaSakhalin for value: Asia/Sakhalin
            /// </summary>
            [EnumMember(Value = "Asia/Sakhalin")]
            AsiaSakhalin = 278,

            /// <summary>
            /// Enum AsiaSrednekolymsk for value: Asia/Srednekolymsk
            /// </summary>
            [EnumMember(Value = "Asia/Srednekolymsk")]
            AsiaSrednekolymsk = 279,

            /// <summary>
            /// Enum AsiaKamchatka for value: Asia/Kamchatka
            /// </summary>
            [EnumMember(Value = "Asia/Kamchatka")]
            AsiaKamchatka = 280,

            /// <summary>
            /// Enum AsiaAnadyr for value: Asia/Anadyr
            /// </summary>
            [EnumMember(Value = "Asia/Anadyr")]
            AsiaAnadyr = 281,

            /// <summary>
            /// Enum AsiaRiyadh for value: Asia/Riyadh
            /// </summary>
            [EnumMember(Value = "Asia/Riyadh")]
            AsiaRiyadh = 282,

            /// <summary>
            /// Enum PacificGuadalcanal for value: Pacific/Guadalcanal
            /// </summary>
            [EnumMember(Value = "Pacific/Guadalcanal")]
            PacificGuadalcanal = 283,

            /// <summary>
            /// Enum IndianMahe for value: Indian/Mahe
            /// </summary>
            [EnumMember(Value = "Indian/Mahe")]
            IndianMahe = 284,

            /// <summary>
            /// Enum AfricaKhartoum for value: Africa/Khartoum
            /// </summary>
            [EnumMember(Value = "Africa/Khartoum")]
            AfricaKhartoum = 285,

            /// <summary>
            /// Enum EuropeStockholm for value: Europe/Stockholm
            /// </summary>
            [EnumMember(Value = "Europe/Stockholm")]
            EuropeStockholm = 286,

            /// <summary>
            /// Enum AsiaSingapore for value: Asia/Singapore
            /// </summary>
            [EnumMember(Value = "Asia/Singapore")]
            AsiaSingapore = 287,

            /// <summary>
            /// Enum AmericaParamaribo for value: America/Paramaribo
            /// </summary>
            [EnumMember(Value = "America/Paramaribo")]
            AmericaParamaribo = 288,

            /// <summary>
            /// Enum AfricaJuba for value: Africa/Juba
            /// </summary>
            [EnumMember(Value = "Africa/Juba")]
            AfricaJuba = 289,

            /// <summary>
            /// Enum AfricaSaoTome for value: Africa/Sao_Tome
            /// </summary>
            [EnumMember(Value = "Africa/Sao_Tome")]
            AfricaSaoTome = 290,

            /// <summary>
            /// Enum AmericaElSalvador for value: America/El_Salvador
            /// </summary>
            [EnumMember(Value = "America/El_Salvador")]
            AmericaElSalvador = 291,

            /// <summary>
            /// Enum AsiaDamascus for value: Asia/Damascus
            /// </summary>
            [EnumMember(Value = "Asia/Damascus")]
            AsiaDamascus = 292,

            /// <summary>
            /// Enum AmericaGrandTurk for value: America/Grand_Turk
            /// </summary>
            [EnumMember(Value = "America/Grand_Turk")]
            AmericaGrandTurk = 293,

            /// <summary>
            /// Enum AfricaNdjamena for value: Africa/Ndjamena
            /// </summary>
            [EnumMember(Value = "Africa/Ndjamena")]
            AfricaNdjamena = 294,

            /// <summary>
            /// Enum IndianKerguelen for value: Indian/Kerguelen
            /// </summary>
            [EnumMember(Value = "Indian/Kerguelen")]
            IndianKerguelen = 295,

            /// <summary>
            /// Enum AsiaBangkok for value: Asia/Bangkok
            /// </summary>
            [EnumMember(Value = "Asia/Bangkok")]
            AsiaBangkok = 296,

            /// <summary>
            /// Enum AsiaDushanbe for value: Asia/Dushanbe
            /// </summary>
            [EnumMember(Value = "Asia/Dushanbe")]
            AsiaDushanbe = 297,

            /// <summary>
            /// Enum PacificFakaofo for value: Pacific/Fakaofo
            /// </summary>
            [EnumMember(Value = "Pacific/Fakaofo")]
            PacificFakaofo = 298,

            /// <summary>
            /// Enum AsiaDili for value: Asia/Dili
            /// </summary>
            [EnumMember(Value = "Asia/Dili")]
            AsiaDili = 299,

            /// <summary>
            /// Enum AsiaAshgabat for value: Asia/Ashgabat
            /// </summary>
            [EnumMember(Value = "Asia/Ashgabat")]
            AsiaAshgabat = 300,

            /// <summary>
            /// Enum AfricaTunis for value: Africa/Tunis
            /// </summary>
            [EnumMember(Value = "Africa/Tunis")]
            AfricaTunis = 301,

            /// <summary>
            /// Enum PacificTongatapu for value: Pacific/Tongatapu
            /// </summary>
            [EnumMember(Value = "Pacific/Tongatapu")]
            PacificTongatapu = 302,

            /// <summary>
            /// Enum EuropeIstanbul for value: Europe/Istanbul
            /// </summary>
            [EnumMember(Value = "Europe/Istanbul")]
            EuropeIstanbul = 303,

            /// <summary>
            /// Enum AmericaPortofSpain for value: America/Port_of_Spain
            /// </summary>
            [EnumMember(Value = "America/Port_of_Spain")]
            AmericaPortofSpain = 304,

            /// <summary>
            /// Enum PacificFunafuti for value: Pacific/Funafuti
            /// </summary>
            [EnumMember(Value = "Pacific/Funafuti")]
            PacificFunafuti = 305,

            /// <summary>
            /// Enum AsiaTaipei for value: Asia/Taipei
            /// </summary>
            [EnumMember(Value = "Asia/Taipei")]
            AsiaTaipei = 306,

            /// <summary>
            /// Enum EuropeKiev for value: Europe/Kiev
            /// </summary>
            [EnumMember(Value = "Europe/Kiev")]
            EuropeKiev = 307,

            /// <summary>
            /// Enum EuropeUzhgorod for value: Europe/Uzhgorod
            /// </summary>
            [EnumMember(Value = "Europe/Uzhgorod")]
            EuropeUzhgorod = 308,

            /// <summary>
            /// Enum EuropeZaporozhye for value: Europe/Zaporozhye
            /// </summary>
            [EnumMember(Value = "Europe/Zaporozhye")]
            EuropeZaporozhye = 309,

            /// <summary>
            /// Enum PacificWake for value: Pacific/Wake
            /// </summary>
            [EnumMember(Value = "Pacific/Wake")]
            PacificWake = 310,

            /// <summary>
            /// Enum AmericaNewYork for value: America/New_York
            /// </summary>
            [EnumMember(Value = "America/New_York")]
            AmericaNewYork = 311,

            /// <summary>
            /// Enum AmericaDetroit for value: America/Detroit
            /// </summary>
            [EnumMember(Value = "America/Detroit")]
            AmericaDetroit = 312,

            /// <summary>
            /// Enum AmericaKentuckyLouisville for value: America/Kentucky/Louisville
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Louisville")]
            AmericaKentuckyLouisville = 313,

            /// <summary>
            /// Enum AmericaKentuckyMonticello for value: America/Kentucky/Monticello
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Monticello")]
            AmericaKentuckyMonticello = 314,

            /// <summary>
            /// Enum AmericaIndianaIndianapolis for value: America/Indiana/Indianapolis
            /// </summary>
            [EnumMember(Value = "America/Indiana/Indianapolis")]
            AmericaIndianaIndianapolis = 315,

            /// <summary>
            /// Enum AmericaIndianaVincennes for value: America/Indiana/Vincennes
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vincennes")]
            AmericaIndianaVincennes = 316,

            /// <summary>
            /// Enum AmericaIndianaWinamac for value: America/Indiana/Winamac
            /// </summary>
            [EnumMember(Value = "America/Indiana/Winamac")]
            AmericaIndianaWinamac = 317,

            /// <summary>
            /// Enum AmericaIndianaMarengo for value: America/Indiana/Marengo
            /// </summary>
            [EnumMember(Value = "America/Indiana/Marengo")]
            AmericaIndianaMarengo = 318,

            /// <summary>
            /// Enum AmericaIndianaPetersburg for value: America/Indiana/Petersburg
            /// </summary>
            [EnumMember(Value = "America/Indiana/Petersburg")]
            AmericaIndianaPetersburg = 319,

            /// <summary>
            /// Enum AmericaIndianaVevay for value: America/Indiana/Vevay
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vevay")]
            AmericaIndianaVevay = 320,

            /// <summary>
            /// Enum AmericaChicago for value: America/Chicago
            /// </summary>
            [EnumMember(Value = "America/Chicago")]
            AmericaChicago = 321,

            /// <summary>
            /// Enum AmericaIndianaTellCity for value: America/Indiana/Tell_City
            /// </summary>
            [EnumMember(Value = "America/Indiana/Tell_City")]
            AmericaIndianaTellCity = 322,

            /// <summary>
            /// Enum AmericaIndianaKnox for value: America/Indiana/Knox
            /// </summary>
            [EnumMember(Value = "America/Indiana/Knox")]
            AmericaIndianaKnox = 323,

            /// <summary>
            /// Enum AmericaMenominee for value: America/Menominee
            /// </summary>
            [EnumMember(Value = "America/Menominee")]
            AmericaMenominee = 324,

            /// <summary>
            /// Enum AmericaNorthDakotaCenter for value: America/North_Dakota/Center
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Center")]
            AmericaNorthDakotaCenter = 325,

            /// <summary>
            /// Enum AmericaNorthDakotaNewSalem for value: America/North_Dakota/New_Salem
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/New_Salem")]
            AmericaNorthDakotaNewSalem = 326,

            /// <summary>
            /// Enum AmericaNorthDakotaBeulah for value: America/North_Dakota/Beulah
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Beulah")]
            AmericaNorthDakotaBeulah = 327,

            /// <summary>
            /// Enum AmericaDenver for value: America/Denver
            /// </summary>
            [EnumMember(Value = "America/Denver")]
            AmericaDenver = 328,

            /// <summary>
            /// Enum AmericaBoise for value: America/Boise
            /// </summary>
            [EnumMember(Value = "America/Boise")]
            AmericaBoise = 329,

            /// <summary>
            /// Enum AmericaPhoenix for value: America/Phoenix
            /// </summary>
            [EnumMember(Value = "America/Phoenix")]
            AmericaPhoenix = 330,

            /// <summary>
            /// Enum AmericaLosAngeles for value: America/Los_Angeles
            /// </summary>
            [EnumMember(Value = "America/Los_Angeles")]
            AmericaLosAngeles = 331,

            /// <summary>
            /// Enum AmericaAnchorage for value: America/Anchorage
            /// </summary>
            [EnumMember(Value = "America/Anchorage")]
            AmericaAnchorage = 332,

            /// <summary>
            /// Enum AmericaJuneau for value: America/Juneau
            /// </summary>
            [EnumMember(Value = "America/Juneau")]
            AmericaJuneau = 333,

            /// <summary>
            /// Enum AmericaSitka for value: America/Sitka
            /// </summary>
            [EnumMember(Value = "America/Sitka")]
            AmericaSitka = 334,

            /// <summary>
            /// Enum AmericaMetlakatla for value: America/Metlakatla
            /// </summary>
            [EnumMember(Value = "America/Metlakatla")]
            AmericaMetlakatla = 335,

            /// <summary>
            /// Enum AmericaYakutat for value: America/Yakutat
            /// </summary>
            [EnumMember(Value = "America/Yakutat")]
            AmericaYakutat = 336,

            /// <summary>
            /// Enum AmericaNome for value: America/Nome
            /// </summary>
            [EnumMember(Value = "America/Nome")]
            AmericaNome = 337,

            /// <summary>
            /// Enum AmericaAdak for value: America/Adak
            /// </summary>
            [EnumMember(Value = "America/Adak")]
            AmericaAdak = 338,

            /// <summary>
            /// Enum PacificHonolulu for value: Pacific/Honolulu
            /// </summary>
            [EnumMember(Value = "Pacific/Honolulu")]
            PacificHonolulu = 339,

            /// <summary>
            /// Enum AmericaMontevideo for value: America/Montevideo
            /// </summary>
            [EnumMember(Value = "America/Montevideo")]
            AmericaMontevideo = 340,

            /// <summary>
            /// Enum AsiaSamarkand for value: Asia/Samarkand
            /// </summary>
            [EnumMember(Value = "Asia/Samarkand")]
            AsiaSamarkand = 341,

            /// <summary>
            /// Enum AsiaTashkent for value: Asia/Tashkent
            /// </summary>
            [EnumMember(Value = "Asia/Tashkent")]
            AsiaTashkent = 342,

            /// <summary>
            /// Enum AmericaCaracas for value: America/Caracas
            /// </summary>
            [EnumMember(Value = "America/Caracas")]
            AmericaCaracas = 343,

            /// <summary>
            /// Enum AsiaHoChiMinh for value: Asia/Ho_Chi_Minh
            /// </summary>
            [EnumMember(Value = "Asia/Ho_Chi_Minh")]
            AsiaHoChiMinh = 344,

            /// <summary>
            /// Enum PacificEfate for value: Pacific/Efate
            /// </summary>
            [EnumMember(Value = "Pacific/Efate")]
            PacificEfate = 345,

            /// <summary>
            /// Enum PacificWallis for value: Pacific/Wallis
            /// </summary>
            [EnumMember(Value = "Pacific/Wallis")]
            PacificWallis = 346,

            /// <summary>
            /// Enum PacificApia for value: Pacific/Apia
            /// </summary>
            [EnumMember(Value = "Pacific/Apia")]
            PacificApia = 347,

            /// <summary>
            /// Enum AfricaJohannesburg for value: Africa/Johannesburg
            /// </summary>
            [EnumMember(Value = "Africa/Johannesburg")]
            AfricaJohannesburg = 348

        }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name="timezone", EmitDefaultValue=true)]
        public TimezoneEnum Timezone { get; set; }
        /// <summary>
        /// Defines VmTranscription
        /// </summary>
        public enum VmTranscriptionEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0

        }

        /// <summary>
        /// Gets or Sets VmTranscription
        /// </summary>
        [DataMember(Name="vmTranscription", EmitDefaultValue=false)]
        public VmTranscriptionEnum? VmTranscription { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUser200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetUser200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUser200Response" /> class.
        /// </summary>
        /// <param name="email">email (required).</param>
        /// <param name="password">password (required).</param>
        /// <param name="sipPassword">sipPassword (required).</param>
        /// <param name="turnPassword">turnPassword.</param>
        /// <param name="first">first (required).</param>
        /// <param name="last">last (required).</param>
        /// <param name="mobilePhone">mobilePhone.</param>
        /// <param name="businessPhone">businessPhone.</param>
        /// <param name="extension">extension.</param>
        /// <param name="customCallerId">customCallerId.</param>
        /// <param name="jobTitle">jobTitle.</param>
        /// <param name="department">department.</param>
        /// <param name="office">ObjectId (unique 12 bytes ID).</param>
        /// <param name="avatar">avatar.</param>
        /// <param name="language">language (default to LanguageEnum.En).</param>
        /// <param name="isPrimary">isPrimary (default to IsPrimaryEnum.NUMBER_0).</param>
        /// <param name="status">status (default to StatusEnum.Active).</param>
        /// <param name="vmGreetingType">vmGreetingType (default to VmGreetingTypeEnum.Default).</param>
        /// <param name="vmTimeout">vmTimeout (default to 20).</param>
        /// <param name="vmFile">ObjectId (unique 12 bytes ID).</param>
        /// <param name="vmPlaybackNumber">vmPlaybackNumber.</param>
        /// <param name="pin">pin (default to 1234).</param>
        /// <param name="number">ObjectId (unique 12 bytes ID).</param>
        /// <param name="region">ObjectId (unique 12 bytes ID).</param>
        /// <param name="callerIdNumber">callerIdNumber.</param>
        /// <param name="adminPermission">adminPermission.</param>
        /// <param name="billingPermission">billingPermission.</param>
        /// <param name="phonePermission">phonePermission.</param>
        /// <param name="agilePermission">agilePermission.</param>
        /// <param name="jobServerPermission">jobServerPermission.</param>
        /// <param name="mediaServerPermission">mediaServerPermission.</param>
        /// <param name="mailServerPermission">mailServerPermission.</param>
        /// <param name="superAdminPermission">superAdminPermission.</param>
        /// <param name="timezone">timezone (required) (default to TimezoneEnum.AmericaNewYork).</param>
        /// <param name="vmTranscription">vmTranscription (default to VmTranscriptionEnum.NUMBER_0).</param>
        /// <param name="communication">communication.</param>
        /// <param name="createdByUserId">ObjectId (unique 12 bytes ID).</param>
        /// <param name="updatedByUserId">ObjectId (unique 12 bytes ID).</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        public GetUser200Response(string email = default(string), string password = default(string), string sipPassword = default(string), string turnPassword = default(string), string first = default(string), string last = default(string), string mobilePhone = default(string), string businessPhone = default(string), int extension = default(int), int customCallerId = default(int), string jobTitle = default(string), string department = default(string), string office = default(string), string avatar = default(string), LanguageEnum? language = LanguageEnum.En, IsPrimaryEnum? isPrimary = IsPrimaryEnum.NUMBER_0, StatusEnum? status = StatusEnum.Active, VmGreetingTypeEnum? vmGreetingType = VmGreetingTypeEnum.Default, int vmTimeout = 20, string vmFile = default(string), string vmPlaybackNumber = default(string), int pin = 1234, string number = default(string), string region = default(string), string callerIdNumber = default(string), AdminPermissionEnum? adminPermission = default(AdminPermissionEnum?), BillingPermissionEnum? billingPermission = default(BillingPermissionEnum?), PhonePermissionEnum? phonePermission = default(PhonePermissionEnum?), AgilePermissionEnum? agilePermission = default(AgilePermissionEnum?), JobServerPermissionEnum? jobServerPermission = default(JobServerPermissionEnum?), MediaServerPermissionEnum? mediaServerPermission = default(MediaServerPermissionEnum?), MailServerPermissionEnum? mailServerPermission = default(MailServerPermissionEnum?), SuperAdminPermissionEnum? superAdminPermission = default(SuperAdminPermissionEnum?), TimezoneEnum timezone = TimezoneEnum.AmericaNewYork, VmTranscriptionEnum? vmTranscription = VmTranscriptionEnum.NUMBER_0, Object communication = default(Object), string createdByUserId = default(string), string updatedByUserId = default(string), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime))
        {
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new InvalidDataException("email is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.Email = email;
            }

            // to ensure "password" is required (not null)
            if (password == null)
            {
                throw new InvalidDataException("password is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.Password = password;
            }

            // to ensure "sipPassword" is required (not null)
            if (sipPassword == null)
            {
                throw new InvalidDataException("sipPassword is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.SipPassword = sipPassword;
            }

            // to ensure "first" is required (not null)
            if (first == null)
            {
                throw new InvalidDataException("first is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.First = first;
            }

            // to ensure "last" is required (not null)
            if (last == null)
            {
                throw new InvalidDataException("last is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.Last = last;
            }

            this.AdminPermission = adminPermission;
            this.BillingPermission = billingPermission;
            this.PhonePermission = phonePermission;
            this.AgilePermission = agilePermission;
            this.JobServerPermission = jobServerPermission;
            this.MediaServerPermission = mediaServerPermission;
            this.MailServerPermission = mailServerPermission;
            this.SuperAdminPermission = superAdminPermission;
            // to ensure "timezone" is required (not null)
            if (timezone == null)
            {
                throw new InvalidDataException("timezone is a required property for GetUser200Response and cannot be null");
            }
            else
            {
                this.Timezone = timezone;
            }

            this.TurnPassword = turnPassword;
            this.MobilePhone = mobilePhone;
            this.BusinessPhone = businessPhone;
            this.Extension = extension;
            this.CustomCallerId = customCallerId;
            this.JobTitle = jobTitle;
            this.Department = department;
            this.Office = office;
            this.Avatar = avatar;
            // use default value if no "language" provided
            if (language == null)
            {
                this.Language = LanguageEnum.En;
            }
            else
            {
                this.Language = language;
            }
            // use default value if no "isPrimary" provided
            if (isPrimary == null)
            {
                this.IsPrimary = IsPrimaryEnum.NUMBER_0;
            }
            else
            {
                this.IsPrimary = isPrimary;
            }
            // use default value if no "status" provided
            if (status == null)
            {
                this.Status = StatusEnum.Active;
            }
            else
            {
                this.Status = status;
            }
            // use default value if no "vmGreetingType" provided
            if (vmGreetingType == null)
            {
                this.VmGreetingType = VmGreetingTypeEnum.Default;
            }
            else
            {
                this.VmGreetingType = vmGreetingType;
            }
            // use default value if no "vmTimeout" provided
            if (vmTimeout == null)
            {
                this.VmTimeout = 20;
            }
            else
            {
                this.VmTimeout = vmTimeout;
            }
            this.VmFile = vmFile;
            this.VmPlaybackNumber = vmPlaybackNumber;
            // use default value if no "pin" provided
            if (pin == null)
            {
                this.Pin = 1234;
            }
            else
            {
                this.Pin = pin;
            }
            this.Number = number;
            this.Region = region;
            this.CallerIdNumber = callerIdNumber;
            this.AdminPermission = adminPermission;
            this.BillingPermission = billingPermission;
            this.PhonePermission = phonePermission;
            this.AgilePermission = agilePermission;
            this.JobServerPermission = jobServerPermission;
            this.MediaServerPermission = mediaServerPermission;
            this.MailServerPermission = mailServerPermission;
            this.SuperAdminPermission = superAdminPermission;
            // use default value if no "vmTranscription" provided
            if (vmTranscription == null)
            {
                this.VmTranscription = VmTranscriptionEnum.NUMBER_0;
            }
            else
            {
                this.VmTranscription = vmTranscription;
            }
            this.Communication = communication;
            this.CreatedByUserId = createdByUserId;
            this.UpdatedByUserId = updatedByUserId;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [DataMember(Name="password", EmitDefaultValue=true)]
        public string Password { get; set; }

        /// <summary>
        /// Gets or Sets SipPassword
        /// </summary>
        [DataMember(Name="sipPassword", EmitDefaultValue=true)]
        public string SipPassword { get; set; }

        /// <summary>
        /// Gets or Sets TurnPassword
        /// </summary>
        [DataMember(Name="turnPassword", EmitDefaultValue=false)]
        public string TurnPassword { get; set; }

        /// <summary>
        /// Gets or Sets First
        /// </summary>
        [DataMember(Name="first", EmitDefaultValue=true)]
        public string First { get; set; }

        /// <summary>
        /// Gets or Sets Last
        /// </summary>
        [DataMember(Name="last", EmitDefaultValue=true)]
        public string Last { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets BusinessPhone
        /// </summary>
        [DataMember(Name="businessPhone", EmitDefaultValue=false)]
        public string BusinessPhone { get; set; }

        /// <summary>
        /// Gets or Sets Extension
        /// </summary>
        [DataMember(Name="extension", EmitDefaultValue=false)]
        public int Extension { get; set; }

        /// <summary>
        /// Gets or Sets CustomCallerId
        /// </summary>
        [DataMember(Name="customCallerId", EmitDefaultValue=false)]
        public int CustomCallerId { get; set; }

        /// <summary>
        /// Gets or Sets JobTitle
        /// </summary>
        [DataMember(Name="jobTitle", EmitDefaultValue=false)]
        public string JobTitle { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department", EmitDefaultValue=false)]
        public string Department { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="office", EmitDefaultValue=false)]
        public string Office { get; set; }

        /// <summary>
        /// Gets or Sets Avatar
        /// </summary>
        [DataMember(Name="avatar", EmitDefaultValue=false)]
        public string Avatar { get; set; }





        /// <summary>
        /// Gets or Sets VmTimeout
        /// </summary>
        [DataMember(Name="vmTimeout", EmitDefaultValue=false)]
        public int VmTimeout { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="vmFile", EmitDefaultValue=false)]
        public string VmFile { get; set; }

        /// <summary>
        /// Gets or Sets VmPlaybackNumber
        /// </summary>
        [DataMember(Name="vmPlaybackNumber", EmitDefaultValue=false)]
        public string VmPlaybackNumber { get; set; }

        /// <summary>
        /// Gets or Sets Pin
        /// </summary>
        [DataMember(Name="pin", EmitDefaultValue=false)]
        public int Pin { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="number", EmitDefaultValue=false)]
        public string Number { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="region", EmitDefaultValue=false)]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdNumber
        /// </summary>
        [DataMember(Name="callerIdNumber", EmitDefaultValue=false)]
        public string CallerIdNumber { get; set; }











        /// <summary>
        /// Gets or Sets Communication
        /// </summary>
        [DataMember(Name="communication", EmitDefaultValue=false)]
        public Object Communication { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="createdByUserId", EmitDefaultValue=false)]
        public string CreatedByUserId { get; set; }

        /// <summary>
        /// ObjectId (unique 12 bytes ID)
        /// </summary>
        /// <value>ObjectId (unique 12 bytes ID)</value>
        [DataMember(Name="updatedByUserId", EmitDefaultValue=false)]
        public string UpdatedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updatedAt", EmitDefaultValue=false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetUser200Response {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  SipPassword: ").Append(SipPassword).Append("\n");
            sb.Append("  TurnPassword: ").Append(TurnPassword).Append("\n");
            sb.Append("  First: ").Append(First).Append("\n");
            sb.Append("  Last: ").Append(Last).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  BusinessPhone: ").Append(BusinessPhone).Append("\n");
            sb.Append("  Extension: ").Append(Extension).Append("\n");
            sb.Append("  CustomCallerId: ").Append(CustomCallerId).Append("\n");
            sb.Append("  JobTitle: ").Append(JobTitle).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  Office: ").Append(Office).Append("\n");
            sb.Append("  Avatar: ").Append(Avatar).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  IsPrimary: ").Append(IsPrimary).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  VmGreetingType: ").Append(VmGreetingType).Append("\n");
            sb.Append("  VmTimeout: ").Append(VmTimeout).Append("\n");
            sb.Append("  VmFile: ").Append(VmFile).Append("\n");
            sb.Append("  VmPlaybackNumber: ").Append(VmPlaybackNumber).Append("\n");
            sb.Append("  Pin: ").Append(Pin).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  CallerIdNumber: ").Append(CallerIdNumber).Append("\n");
            sb.Append("  AdminPermission: ").Append(AdminPermission).Append("\n");
            sb.Append("  BillingPermission: ").Append(BillingPermission).Append("\n");
            sb.Append("  PhonePermission: ").Append(PhonePermission).Append("\n");
            sb.Append("  AgilePermission: ").Append(AgilePermission).Append("\n");
            sb.Append("  JobServerPermission: ").Append(JobServerPermission).Append("\n");
            sb.Append("  MediaServerPermission: ").Append(MediaServerPermission).Append("\n");
            sb.Append("  MailServerPermission: ").Append(MailServerPermission).Append("\n");
            sb.Append("  SuperAdminPermission: ").Append(SuperAdminPermission).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  VmTranscription: ").Append(VmTranscription).Append("\n");
            sb.Append("  Communication: ").Append(Communication).Append("\n");
            sb.Append("  CreatedByUserId: ").Append(CreatedByUserId).Append("\n");
            sb.Append("  UpdatedByUserId: ").Append(UpdatedByUserId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetUser200Response);
        }

        /// <summary>
        /// Returns true if GetUser200Response instances are equal
        /// </summary>
        /// <param name="input">Instance of GetUser200Response to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetUser200Response input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Password == input.Password ||
                    (this.Password != null &&
                    this.Password.Equals(input.Password))
                ) && 
                (
                    this.SipPassword == input.SipPassword ||
                    (this.SipPassword != null &&
                    this.SipPassword.Equals(input.SipPassword))
                ) && 
                (
                    this.TurnPassword == input.TurnPassword ||
                    (this.TurnPassword != null &&
                    this.TurnPassword.Equals(input.TurnPassword))
                ) && 
                (
                    this.First == input.First ||
                    (this.First != null &&
                    this.First.Equals(input.First))
                ) && 
                (
                    this.Last == input.Last ||
                    (this.Last != null &&
                    this.Last.Equals(input.Last))
                ) && 
                (
                    this.MobilePhone == input.MobilePhone ||
                    (this.MobilePhone != null &&
                    this.MobilePhone.Equals(input.MobilePhone))
                ) && 
                (
                    this.BusinessPhone == input.BusinessPhone ||
                    (this.BusinessPhone != null &&
                    this.BusinessPhone.Equals(input.BusinessPhone))
                ) && 
                (
                    this.Extension == input.Extension ||
                    (this.Extension != null &&
                    this.Extension.Equals(input.Extension))
                ) && 
                (
                    this.CustomCallerId == input.CustomCallerId ||
                    (this.CustomCallerId != null &&
                    this.CustomCallerId.Equals(input.CustomCallerId))
                ) && 
                (
                    this.JobTitle == input.JobTitle ||
                    (this.JobTitle != null &&
                    this.JobTitle.Equals(input.JobTitle))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.Office == input.Office ||
                    (this.Office != null &&
                    this.Office.Equals(input.Office))
                ) && 
                (
                    this.Avatar == input.Avatar ||
                    (this.Avatar != null &&
                    this.Avatar.Equals(input.Avatar))
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.IsPrimary == input.IsPrimary ||
                    (this.IsPrimary != null &&
                    this.IsPrimary.Equals(input.IsPrimary))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.VmGreetingType == input.VmGreetingType ||
                    (this.VmGreetingType != null &&
                    this.VmGreetingType.Equals(input.VmGreetingType))
                ) && 
                (
                    this.VmTimeout == input.VmTimeout ||
                    (this.VmTimeout != null &&
                    this.VmTimeout.Equals(input.VmTimeout))
                ) && 
                (
                    this.VmFile == input.VmFile ||
                    (this.VmFile != null &&
                    this.VmFile.Equals(input.VmFile))
                ) && 
                (
                    this.VmPlaybackNumber == input.VmPlaybackNumber ||
                    (this.VmPlaybackNumber != null &&
                    this.VmPlaybackNumber.Equals(input.VmPlaybackNumber))
                ) && 
                (
                    this.Pin == input.Pin ||
                    (this.Pin != null &&
                    this.Pin.Equals(input.Pin))
                ) && 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.Region == input.Region ||
                    (this.Region != null &&
                    this.Region.Equals(input.Region))
                ) && 
                (
                    this.CallerIdNumber == input.CallerIdNumber ||
                    (this.CallerIdNumber != null &&
                    this.CallerIdNumber.Equals(input.CallerIdNumber))
                ) && 
                (
                    this.AdminPermission == input.AdminPermission ||
                    (this.AdminPermission != null &&
                    this.AdminPermission.Equals(input.AdminPermission))
                ) && 
                (
                    this.BillingPermission == input.BillingPermission ||
                    (this.BillingPermission != null &&
                    this.BillingPermission.Equals(input.BillingPermission))
                ) && 
                (
                    this.PhonePermission == input.PhonePermission ||
                    (this.PhonePermission != null &&
                    this.PhonePermission.Equals(input.PhonePermission))
                ) && 
                (
                    this.AgilePermission == input.AgilePermission ||
                    (this.AgilePermission != null &&
                    this.AgilePermission.Equals(input.AgilePermission))
                ) && 
                (
                    this.JobServerPermission == input.JobServerPermission ||
                    (this.JobServerPermission != null &&
                    this.JobServerPermission.Equals(input.JobServerPermission))
                ) && 
                (
                    this.MediaServerPermission == input.MediaServerPermission ||
                    (this.MediaServerPermission != null &&
                    this.MediaServerPermission.Equals(input.MediaServerPermission))
                ) && 
                (
                    this.MailServerPermission == input.MailServerPermission ||
                    (this.MailServerPermission != null &&
                    this.MailServerPermission.Equals(input.MailServerPermission))
                ) && 
                (
                    this.SuperAdminPermission == input.SuperAdminPermission ||
                    (this.SuperAdminPermission != null &&
                    this.SuperAdminPermission.Equals(input.SuperAdminPermission))
                ) && 
                (
                    this.Timezone == input.Timezone ||
                    (this.Timezone != null &&
                    this.Timezone.Equals(input.Timezone))
                ) && 
                (
                    this.VmTranscription == input.VmTranscription ||
                    (this.VmTranscription != null &&
                    this.VmTranscription.Equals(input.VmTranscription))
                ) && 
                (
                    this.Communication == input.Communication ||
                    (this.Communication != null &&
                    this.Communication.Equals(input.Communication))
                ) && 
                (
                    this.CreatedByUserId == input.CreatedByUserId ||
                    (this.CreatedByUserId != null &&
                    this.CreatedByUserId.Equals(input.CreatedByUserId))
                ) && 
                (
                    this.UpdatedByUserId == input.UpdatedByUserId ||
                    (this.UpdatedByUserId != null &&
                    this.UpdatedByUserId.Equals(input.UpdatedByUserId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Password != null)
                    hashCode = hashCode * 59 + this.Password.GetHashCode();
                if (this.SipPassword != null)
                    hashCode = hashCode * 59 + this.SipPassword.GetHashCode();
                if (this.TurnPassword != null)
                    hashCode = hashCode * 59 + this.TurnPassword.GetHashCode();
                if (this.First != null)
                    hashCode = hashCode * 59 + this.First.GetHashCode();
                if (this.Last != null)
                    hashCode = hashCode * 59 + this.Last.GetHashCode();
                if (this.MobilePhone != null)
                    hashCode = hashCode * 59 + this.MobilePhone.GetHashCode();
                if (this.BusinessPhone != null)
                    hashCode = hashCode * 59 + this.BusinessPhone.GetHashCode();
                if (this.Extension != null)
                    hashCode = hashCode * 59 + this.Extension.GetHashCode();
                if (this.CustomCallerId != null)
                    hashCode = hashCode * 59 + this.CustomCallerId.GetHashCode();
                if (this.JobTitle != null)
                    hashCode = hashCode * 59 + this.JobTitle.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.Office != null)
                    hashCode = hashCode * 59 + this.Office.GetHashCode();
                if (this.Avatar != null)
                    hashCode = hashCode * 59 + this.Avatar.GetHashCode();
                if (this.Language != null)
                    hashCode = hashCode * 59 + this.Language.GetHashCode();
                if (this.IsPrimary != null)
                    hashCode = hashCode * 59 + this.IsPrimary.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.VmGreetingType != null)
                    hashCode = hashCode * 59 + this.VmGreetingType.GetHashCode();
                if (this.VmTimeout != null)
                    hashCode = hashCode * 59 + this.VmTimeout.GetHashCode();
                if (this.VmFile != null)
                    hashCode = hashCode * 59 + this.VmFile.GetHashCode();
                if (this.VmPlaybackNumber != null)
                    hashCode = hashCode * 59 + this.VmPlaybackNumber.GetHashCode();
                if (this.Pin != null)
                    hashCode = hashCode * 59 + this.Pin.GetHashCode();
                if (this.Number != null)
                    hashCode = hashCode * 59 + this.Number.GetHashCode();
                if (this.Region != null)
                    hashCode = hashCode * 59 + this.Region.GetHashCode();
                if (this.CallerIdNumber != null)
                    hashCode = hashCode * 59 + this.CallerIdNumber.GetHashCode();
                if (this.AdminPermission != null)
                    hashCode = hashCode * 59 + this.AdminPermission.GetHashCode();
                if (this.BillingPermission != null)
                    hashCode = hashCode * 59 + this.BillingPermission.GetHashCode();
                if (this.PhonePermission != null)
                    hashCode = hashCode * 59 + this.PhonePermission.GetHashCode();
                if (this.AgilePermission != null)
                    hashCode = hashCode * 59 + this.AgilePermission.GetHashCode();
                if (this.JobServerPermission != null)
                    hashCode = hashCode * 59 + this.JobServerPermission.GetHashCode();
                if (this.MediaServerPermission != null)
                    hashCode = hashCode * 59 + this.MediaServerPermission.GetHashCode();
                if (this.MailServerPermission != null)
                    hashCode = hashCode * 59 + this.MailServerPermission.GetHashCode();
                if (this.SuperAdminPermission != null)
                    hashCode = hashCode * 59 + this.SuperAdminPermission.GetHashCode();
                if (this.Timezone != null)
                    hashCode = hashCode * 59 + this.Timezone.GetHashCode();
                if (this.VmTranscription != null)
                    hashCode = hashCode * 59 + this.VmTranscription.GetHashCode();
                if (this.Communication != null)
                    hashCode = hashCode * 59 + this.Communication.GetHashCode();
                if (this.CreatedByUserId != null)
                    hashCode = hashCode * 59 + this.CreatedByUserId.GetHashCode();
                if (this.UpdatedByUserId != null)
                    hashCode = hashCode * 59 + this.UpdatedByUserId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Email (string) maxLength
            if(this.Email != null && this.Email.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, length must be less than 255.", new [] { "Email" });
            }

            // Email (string) minLength
            if(this.Email != null && this.Email.Length < 5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, length must be greater than 5.", new [] { "Email" });
            }

            // Password (string) maxLength
            if(this.Password != null && this.Password.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Password, length must be less than 255.", new [] { "Password" });
            }

            // Password (string) minLength
            if(this.Password != null && this.Password.Length < 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Password, length must be greater than 8.", new [] { "Password" });
            }

            // SipPassword (string) maxLength
            if(this.SipPassword != null && this.SipPassword.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SipPassword, length must be less than 45.", new [] { "SipPassword" });
            }

            // SipPassword (string) minLength
            if(this.SipPassword != null && this.SipPassword.Length < 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SipPassword, length must be greater than 8.", new [] { "SipPassword" });
            }

            // TurnPassword (string) maxLength
            if(this.TurnPassword != null && this.TurnPassword.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TurnPassword, length must be less than 45.", new [] { "TurnPassword" });
            }

            // TurnPassword (string) minLength
            if(this.TurnPassword != null && this.TurnPassword.Length < 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TurnPassword, length must be greater than 8.", new [] { "TurnPassword" });
            }

            // First (string) maxLength
            if(this.First != null && this.First.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for First, length must be less than 45.", new [] { "First" });
            }


            // Last (string) maxLength
            if(this.Last != null && this.Last.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Last, length must be less than 45.", new [] { "Last" });
            }


            // MobilePhone (string) maxLength
            if(this.MobilePhone != null && this.MobilePhone.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MobilePhone, length must be less than 20.", new [] { "MobilePhone" });
            }


            // BusinessPhone (string) maxLength
            if(this.BusinessPhone != null && this.BusinessPhone.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BusinessPhone, length must be less than 20.", new [] { "BusinessPhone" });
            }

            // BusinessPhone (string) minLength
            if(this.BusinessPhone != null && this.BusinessPhone.Length < 7)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BusinessPhone, length must be greater than 7.", new [] { "BusinessPhone" });
            }

            // JobTitle (string) maxLength
            if(this.JobTitle != null && this.JobTitle.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for JobTitle, length must be less than 45.", new [] { "JobTitle" });
            }


            // Department (string) maxLength
            if(this.Department != null && this.Department.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Department, length must be less than 45.", new [] { "Department" });
            }


            // Avatar (string) maxLength
            if(this.Avatar != null && this.Avatar.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Avatar, length must be less than 255.", new [] { "Avatar" });
            }


            // Language (string) maxLength
            if(this.Language != null && this.Language.ToString().Length > 5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Language, length must be less than 5.", new [] { "Language" });
            }


            // VmPlaybackNumber (string) maxLength
            if(this.VmPlaybackNumber != null && this.VmPlaybackNumber.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VmPlaybackNumber, length must be less than 20.", new [] { "VmPlaybackNumber" });
            }


            // CallerIdNumber (string) maxLength
            if(this.CallerIdNumber != null && this.CallerIdNumber.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CallerIdNumber, length must be less than 20.", new [] { "CallerIdNumber" });
            }


            // Timezone (string) maxLength
            if(this.Timezone != null && this.Timezone.ToString().Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Timezone, length must be less than 45.", new [] { "Timezone" });
            }


            yield break;
        }
    }

}
